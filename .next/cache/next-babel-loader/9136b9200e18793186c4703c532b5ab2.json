{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useClickOutside, usePopup } from \"../../../hooks\";\nimport cn from 'classnames';\nimport { Link } from \"../../../Link\";\nimport styles from \"./index.css\";\nimport { UnderlineWrapper } from \"../../../UnderlineWrapper\";\nimport { useRef } from 'react';\nexport function Dropdown(props) {\n  const popup = usePopup(false);\n  const popupRef = useRef(null);\n  useClickOutside({\n    callback: popup.close,\n    intactId: props.intactId,\n    reference: popupRef\n  });\n  return __jsx(\"div\", {\n    className: cn(styles.dropdown, props.className)\n  }, __jsx(\"div\", {\n    className: cn('popup', {\n      'is-shown': popup.isShown\n    }),\n    ref: popupRef\n  }, props.items.map(item => item.isHtmlLink ? __jsx(\"a\", {\n    className: \"link\",\n    href: item.href,\n    key: item.title\n  }, item.title) : __jsx(Link, {\n    className: \"link\",\n    href: item.href,\n    key: item.title,\n    onClick: popup.close\n  }, item.title))), __jsx(UnderlineWrapper, {\n    className: \"link\"\n  }, __jsx(\"button\", {\n    className: \"button\",\n    \"data-intact-id\": props.intactId,\n    onClick: popup.toggle\n  }, props.children)));\n}","map":null,"metadata":{},"sourceType":"module"}