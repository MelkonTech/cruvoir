{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { appendURLQueryParams, objectToFetchPostParams } from \"../helpers\";\nimport cn from 'classnames';\nimport { Icon } from \"../Icon\";\nimport { Link } from \"../Link\";\nimport styles from \"./index.css\";\nimport { useMemo } from 'react';\nexport function Paginator(props) {\n  const queryParamsString = useMemo(() => R.compose(objectToFetchPostParams, R.filter(Boolean))(props.queryParams || {}), [props.queryParams]);\n  return __jsx(\"div\", {\n    className: cn(styles.paginator, props.className)\n  }, __jsx(Link, {\n    className: cn('link', {\n      'is-disabled': !props.previousLinkAs\n    }),\n    as: props.previousLinkAs ? appendURLQueryParams(props.previousLinkAs, queryParamsString) : '',\n    href: props.previousLinkHref ? appendURLQueryParams(props.previousLinkHref, queryParamsString) : ''\n  }, __jsx(Icon, {\n    name: \"arrow-left\"\n  })), __jsx(Link, {\n    className: cn('link', {\n      'is-disabled': !props.nextLinkAs\n    }),\n    as: props.nextLinkAs ? appendURLQueryParams(props.nextLinkAs, queryParamsString) : '',\n    href: props.nextLinkHref ? appendURLQueryParams(props.nextLinkHref, queryParamsString) : ''\n  }, __jsx(Icon, {\n    name: \"arrow-right\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}