{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { appendURLQueryParams, getUrlAs, getUrlHref, objectToFetchPostParams } from \"../../../../common/helpers\";\nimport { CollapsableSection } from \"../common/CollapsableSection\";\nimport { Fragment } from 'react';\nimport { Link } from \"../../../../common/Link\";\nimport { useTranslation } from \"../../../../../i18n\";\nexport function Genders(props) {\n  const {\n    t\n  } = useTranslation();\n  const queryParamsString = R.compose(objectToFetchPostParams, R.reject(R.anyPass([R.isEmpty, R.isNil])))({\n    search: props.query.search\n  });\n  return __jsx(CollapsableSection, {\n    className: props.className,\n    isCollapsed: true,\n    title: t('gender')\n  }, __jsx(Fragment, null, R.map(gender => __jsx(Link, {\n    as: appendURLQueryParams(getUrlAs({\n      collection: props.query.collection,\n      gender: gender,\n      isWishListRequested: props.isWishListRequested\n    }), queryParamsString),\n    className: \"link\",\n    href: appendURLQueryParams(getUrlHref({\n      collection: props.query.collection,\n      gender: gender,\n      isWishListRequested: props.isWishListRequested\n    }), queryParamsString),\n    key: gender\n  }, t(gender)), ['men', 'women'])));\n}","map":null,"metadata":{},"sourceType":"module"}