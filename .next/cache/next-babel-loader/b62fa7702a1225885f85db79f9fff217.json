{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport cn from 'classnames';\nimport { Icon } from \"../../../common/Icon\";\nimport { Link } from \"../../../common/Link\";\nimport { objectToQueryString } from \"../../../common/helpers\";\nimport styles from \"./index.css\";\nexport function Pagination(props) {\n  let linkAs;\n  const nextPageNum = Math.min(props.totalPages, props.page + 1);\n  const prevPageNum = Math.max(1, props.page - 1);\n  if (props.query.gender && props.query.month) linkAs = `/${props.query.gender}/${props.query.month}`;else if (props.query.tagslug) linkAs = `/t/${props.query.tagslug}`;else linkAs = '/';\n  return __jsx(\"div\", {\n    className: cn(styles.pagination, props.className)\n  }, __jsx(Link, {\n    as: `${linkAs}?page=${prevPageNum}`,\n    className: cn('link', {\n      'is-disabled': props.page === 1\n    }),\n    href: `${props.pathname}?${objectToQueryString(R.assoc('page', prevPageNum, props.query))}`\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"arrow-left\"\n  })), __jsx(Link, {\n    as: `${linkAs}?page=${nextPageNum}`,\n    className: cn('link', {\n      'is-disabled': props.page === props.totalPages\n    }),\n    href: `${props.pathname}?${objectToQueryString(R.assoc('page', nextPageNum, props.query))}`\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"arrow-right\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}