{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { Fragment, useCallback, useMemo, useState } from 'react';\nimport { getFirstVariantPrice, getInitialVariantOptions, getUnavailableOptions, getVariantOptionByName } from \"../helpers\";\nimport { nameToHandle, productPath } from \"../helpers\";\nimport cn from 'classnames';\nimport { EmptyMessage } from \"../EmptyMessage\";\nimport { Form } from \"./Form\";\nimport { Formik } from 'formik';\nimport { Link } from \"../Link\";\nimport { PriceWithCompareAt } from \"../PriceWithCompareAt\";\nimport styles from \"./index.css\";\nimport { useTranslation } from \"../../../i18n\";\nimport { WishButton } from \"../WishButton\"; // https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/ADVANCED.md#adding-non-standard-attributes\n\nexport function ProductCard(props) {\n  const {\n    t\n  } = useTranslation();\n  const path = productPath(props.product.tags);\n  const gender = R.pathOr('', ['gender'], path).toLowerCase();\n  const vendorHandle = nameToHandle(props.product.vendor);\n  const options = useMemo(() => R.reject(R.propEq('name', 'Color'), R.pathOr([], ['options'], props.product)), [props.product]);\n  const variants = useMemo(() => R.sort((a, b) => +b.node.availableForSale - +a.node.availableForSale, R.pathOr([], ['variants', 'edges'], props.product)), [props.product]);\n  const {\n    0: price,\n    1: setPrice\n  } = useState(getFirstVariantPrice(variants, 'priceV2'));\n  const {\n    0: compareAtPrice,\n    1: setCompareAtPrice\n  } = useState(getFirstVariantPrice(variants, 'compareAtPriceV2'));\n  const {\n    0: isAvailableForSale,\n    1: setIsAvailableForSale\n  } = useState(R.pathOr(null, ['node', 'availableForSale'], variants[0]));\n  const initialVariantOptions = useMemo(() => getInitialVariantOptions(variants), [variants]);\n  const {\n    0: unavailableOptions,\n    1: setUnavailableOptions\n  } = useState(getUnavailableOptions(initialVariantOptions, options, variants));\n  const updatePriceAndAvailability = useCallback(values => {\n    const matchingVariant = R.find(variant => {\n      for (let key in values) if (!getVariantOptionByName(key, variant.node) || getVariantOptionByName(key, variant.node) !== values[key]) return false;\n\n      return true;\n    }, variants);\n    setPrice(matchingVariant.node.priceV2);\n    setCompareAtPrice(matchingVariant.node.compareAtPriceV2);\n    setIsAvailableForSale(matchingVariant.node.availableForSale);\n    setUnavailableOptions(getUnavailableOptions(values, options, variants));\n  }, [options, variants]);\n  const submit = useCallback(() => {}, []);\n  const {\n    0: isErrorImageShown,\n    1: setIsErrorImageShown\n  } = useState(false);\n  const showErrorImage = useCallback(() => setIsErrorImageShown(true), []);\n  return __jsx(Formik, {\n    initialValues: initialVariantOptions,\n    onSubmit: submit,\n    validate: updatePriceAndAvailability\n  }, __jsx(\"div\", {\n    className: cn(styles.card, props.className)\n  }, __jsx(\"div\", {\n    className: \"picture\"\n  }, !isErrorImageShown && !R.isEmpty(props.product.images.edges) && __jsx(Fragment, null, __jsx(\"img\", {\n    src: props.product.images.edges[0].node.transformedSrc,\n    alt: props.product.images.edges[0].node.altText || props.product.title,\n    className: \"image\",\n    loading: \"lazy\",\n    onError: showErrorImage\n  }), props.product.images.edges[1] && __jsx(\"img\", {\n    src: props.product.images.edges[1].node.transformedSrc,\n    alt: props.product.images.edges[1].node.altText || props.product.title,\n    className: \"image\",\n    loading: \"lazy\",\n    onError: showErrorImage\n  })), (isErrorImageShown || R.isEmpty(props.product.images.edges)) && __jsx(EmptyMessage, {\n    className: \"empty-message\"\n  }, t('noImage'))), __jsx(\"div\", {\n    className: \"section\"\n  }, __jsx(\"div\", {\n    className: \"vendor\"\n  }, props.product.vendor), __jsx(Link, {\n    as: `/${gender}/shop/item/${vendorHandle}/${props.product.handle}`\n    /* eslint-disable-next-line max-len */\n    ,\n    href: `/[gender]/shop/item/[vendor]/[handle]?gender=${gender}&vendor=${vendorHandle}&handle=${props.product.handle}`,\n    className: \"title\"\n  }, props.product.title), __jsx(PriceWithCompareAt, {\n    className: \"price\",\n    compareAtPrice: R.path(['amount'], compareAtPrice),\n    price: Number(price.amount)\n  })), __jsx(WishButton, {\n    className: \"wish-button\",\n    productId: props.product.id\n  }), __jsx(Form, {\n    className: \"form\",\n    isAvailableForSale: isAvailableForSale,\n    options: options,\n    product: props.product,\n    unavailableOptions: unavailableOptions,\n    variants: variants\n  })));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/ProductCard/index.tsx"],"names":["R","Fragment","useCallback","useMemo","useState","getFirstVariantPrice","getInitialVariantOptions","getUnavailableOptions","getVariantOptionByName","nameToHandle","productPath","cn","EmptyMessage","Form","Formik","Link","PriceWithCompareAt","styles","useTranslation","WishButton","ProductCard","props","t","path","product","tags","gender","pathOr","toLowerCase","vendorHandle","vendor","options","reject","propEq","variants","sort","a","b","node","availableForSale","price","setPrice","compareAtPrice","setCompareAtPrice","isAvailableForSale","setIsAvailableForSale","initialVariantOptions","unavailableOptions","setUnavailableOptions","updatePriceAndAvailability","values","matchingVariant","find","variant","key","priceV2","compareAtPriceV2","submit","isErrorImageShown","setIsErrorImageShown","showErrorImage","card","className","isEmpty","images","edges","transformedSrc","altText","title","handle","Number","amount","id"],"mappings":"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","sourcesContent":["import * as R from 'ramda'\nimport {Fragment, useCallback, useMemo, useState} from 'react'\n\nimport {\n  getFirstVariantPrice, getInitialVariantOptions, getUnavailableOptions, getVariantOptionByName,\n} from 'components/common/helpers'\n\nimport {nameToHandle, productPath} from 'components/common/helpers'\nimport {Product, Variant} from 'components/common/types'\nimport cn from 'classnames'\nimport {EmptyMessage} from 'components/common/EmptyMessage'\nimport {Form} from './Form'\nimport {Formik} from 'formik'\nimport {Link} from 'components/common/Link'\nimport {PriceWithCompareAt} from 'components/common/PriceWithCompareAt'\nimport styles from './index.css'\nimport {useTranslation} from 'i18n'\nimport {WishButton} from 'components/common/WishButton'\n\n// https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/blob/master/ADVANCED.md#adding-non-standard-attributes\ndeclare module 'react' {\n  interface ImgHTMLAttributes<T> extends HTMLAttributes<T> {\n    loading?: 'eager' | 'lazy'\n  }\n}\n\nexport function ProductCard(props: {\n  className?: string\n  product: Product\n}) {\n  const {t} = useTranslation()\n  const path = productPath(props.product.tags)\n  const gender = R.pathOr('', ['gender'], path).toLowerCase()\n  const vendorHandle = nameToHandle(props.product.vendor)\n\n  const options = useMemo(\n    () => R.reject(R.propEq('name', 'Color'), R.pathOr([], ['options'], props.product)),\n    [props.product],\n  )\n\n  const variants = useMemo(\n    () => R.sort(\n      (a: {node: Variant}, b: {node: Variant}) => +b.node.availableForSale - +a.node.availableForSale,\n      R.pathOr([], ['variants', 'edges'], props.product)),\n    [props.product],\n  )\n\n  const [price, setPrice] = useState(getFirstVariantPrice(variants, 'priceV2'))\n  const [compareAtPrice, setCompareAtPrice] = useState(getFirstVariantPrice(variants, 'compareAtPriceV2'))\n\n  const [isAvailableForSale, setIsAvailableForSale] = useState(R.pathOr(\n    null,\n    ['node', 'availableForSale'],\n    variants[0],\n  ))\n\n  const initialVariantOptions = useMemo(\n    () => getInitialVariantOptions(variants),\n    [variants],\n  )\n\n  const [unavailableOptions, setUnavailableOptions] = useState(\n    getUnavailableOptions(initialVariantOptions, options, variants),\n  )\n\n  const updatePriceAndAvailability = useCallback(values => {\n    const matchingVariant = R.find(variant => {\n      for(let key in values)\n        if(!getVariantOptionByName(key, variant.node) || getVariantOptionByName(key, variant.node) !== values[key])\n          return false\n\n      return true\n    }, variants)\n\n    setPrice(matchingVariant.node.priceV2)\n    setCompareAtPrice(matchingVariant.node.compareAtPriceV2)\n    setIsAvailableForSale(matchingVariant.node.availableForSale)\n    setUnavailableOptions(getUnavailableOptions(values, options, variants))\n  }, [options, variants])\n\n  const submit = useCallback(\n    () => {},\n    [],\n  )\n\n  const [isErrorImageShown, setIsErrorImageShown] = useState(false)\n  const showErrorImage = useCallback(() => setIsErrorImageShown(true), [])\n\n  return <Formik\n    initialValues={initialVariantOptions}\n    onSubmit={submit}\n    validate={updatePriceAndAvailability}\n  >\n    <div className={cn(styles.card, props.className)}>\n      <div className=\"picture\">\n        {!isErrorImageShown && !R.isEmpty(props.product.images.edges) && <Fragment>\n          <img\n            src={props.product.images.edges[0].node.transformedSrc}\n            alt={props.product.images.edges[0].node.altText || props.product.title}\n            className=\"image\"\n            loading=\"lazy\"\n            onError={showErrorImage}\n          />\n\n          {props.product.images.edges[1] && <img\n            src={props.product.images.edges[1].node.transformedSrc}\n            alt={props.product.images.edges[1].node.altText || props.product.title}\n            className=\"image\"\n            loading=\"lazy\"\n            onError={showErrorImage}\n          />}\n        </Fragment>}\n\n        {(isErrorImageShown || R.isEmpty(props.product.images.edges)) && <EmptyMessage className=\"empty-message\">\n          {t('noImage')}\n        </EmptyMessage>}\n      </div>\n\n      <div className=\"section\">\n        <div className=\"vendor\">{props.product.vendor}</div>\n\n        <Link\n          as={`/${gender}/shop/item/${vendorHandle}/${props.product.handle}`}\n\n          /* eslint-disable-next-line max-len */\n          href={`/[gender]/shop/item/[vendor]/[handle]?gender=${gender}&vendor=${vendorHandle}&handle=${props.product.handle}`}\n\n          className=\"title\"\n        >{props.product.title}</Link>\n\n        <PriceWithCompareAt\n          className=\"price\"\n          compareAtPrice={R.path(['amount'], compareAtPrice)}\n          price={Number(price.amount)}\n        />\n      </div>\n\n      <WishButton className=\"wish-button\" productId={props.product.id} />\n\n      <Form\n        className=\"form\"\n        isAvailableForSale={isAvailableForSale}\n        options={options}\n        product={props.product}\n        unavailableOptions={unavailableOptions}\n        variants={variants}\n      />\n    </div>\n  </Formik>\n}\n"]},"metadata":{},"sourceType":"module"}