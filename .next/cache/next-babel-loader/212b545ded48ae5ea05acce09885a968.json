{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useContext, useMemo } from 'react';\nimport cn from 'classnames';\nimport { CurrencyContext } from \"../../../common/CurrencyContext\";\nimport { Item } from \"./Item\";\nimport styles from \"./index.css\";\nimport { UnderlineWrapper } from \"../../../common/UnderlineWrapper\";\nimport { useFormikContext } from 'formik';\nimport { useTranslation } from \"../../../../i18n\";\nexport function AppliedFilters(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    setFieldValue,\n    values\n  } = useFormikContext();\n  const currencyCtx = useContext(CurrencyContext);\n  const prefix = useMemo(() => ({\n    CAD: 'C$',\n    EUR: '€',\n    GBP: '£',\n    USD: '$'\n  })[currencyCtx.active], [currencyCtx.active]);\n  const clear = useCallback(() => {\n    setFieldValue('colors', []);\n    setFieldValue('minPrice', '');\n    setFieldValue('maxPrice', '');\n    setFieldValue('vendors', []);\n    setFieldValue('tags', []);\n  }, [setFieldValue]);\n  const hasAppliedFilters = values.colors.length > 0 || values.minPrice !== '' || values.maxPrice !== '' || values.vendors.length > 0 || values.tags.length > 0;\n  return __jsx(\"div\", {\n    className: cn(styles.appliedFilters, props.className, {\n      'is-shown': hasAppliedFilters\n    })\n  }, __jsx(\"div\", {\n    className: \"wrapper\"\n  }, values.colors.map(item => __jsx(Item, {\n    className: \"item\" // eslint-disable-next-line react/jsx-no-bind\n    ,\n    clear: () => setFieldValue('colors', values.colors.filter(e => e !== item)),\n    key: `colors-${item}`\n  }, item)), values.minPrice && __jsx(Item, {\n    className: \"item\" // eslint-disable-next-line react/jsx-no-bind\n    ,\n    clear: () => setFieldValue('minPrice', '')\n  }, `${t('min')}: ${prefix}${values.minPrice}`), values.maxPrice && __jsx(Item, {\n    className: \"item\" // eslint-disable-next-line react/jsx-no-bind\n    ,\n    clear: () => setFieldValue('maxPrice', '')\n  }, `${t('max')}: ${prefix}${values.maxPrice}`), values.vendors.map(item => __jsx(Item, {\n    className: \"item\" // eslint-disable-next-line react/jsx-no-bind\n    ,\n    clear: () => setFieldValue('vendors', values.vendors.filter(e => e !== item)),\n    key: `vendors-${item}`\n  }, item)), values.tags.map(item => __jsx(Item, {\n    className: \"item\" // eslint-disable-next-line react/jsx-no-bind\n    ,\n    clear: () => setFieldValue('tags', values.tags.filter(e => e !== item)),\n    key: `tags-${item}`\n  }, item)), hasAppliedFilters && __jsx(\"div\", {\n    className: \"button-wrapper\"\n  }, __jsx(UnderlineWrapper, {\n    className: \"wrapper\"\n  }, __jsx(\"button\", {\n    className: \"button\",\n    onClick: clear,\n    type: \"button\"\n  }, t('clearAll'))))));\n}","map":null,"metadata":{},"sourceType":"module"}