{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport cn from 'classnames';\nimport getConfig from 'next/config';\nimport { Link } from \"../../../../Link\";\nimport styles from \"./index.css\";\nimport { useTranslation } from \"../../../../../../i18n\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\nexport function GenderLinks(props) {\n  const {\n    t\n  } = useTranslation();\n  return __jsx(\"div\", {\n    className: cn(styles.genderLinks, props.className)\n  }, props.isBlogDomain ? __jsx(\"a\", {\n    className: cn('link', {\n      'is-selected': props.gender === 'women'\n    }),\n    href: `${publicRuntimeConfig.NEXT_PUBLIC_APP_URL}/women`,\n    onClick: props.close\n  }, t('women')) : __jsx(Link, {\n    as: \"/women\",\n    className: cn('link', {\n      'is-selected': props.gender === 'women'\n    }),\n    href: \"/[gender]?gender=women\",\n    onClick: props.close\n  }, t('women')), props.isBlogDomain ? __jsx(\"a\", {\n    className: cn('link', {\n      'is-selected': props.gender === 'men'\n    }),\n    href: `${publicRuntimeConfig.NEXT_PUBLIC_APP_URL}/men`,\n    onClick: props.close\n  }, t('men')) : __jsx(Link, {\n    as: \"/men\",\n    className: cn('link', {\n      'is-selected': props.gender === 'men'\n    }),\n    href: \"/[gender]?gender=men\",\n    onClick: props.close\n  }, t('men')));\n}","map":null,"metadata":{},"sourceType":"module"}