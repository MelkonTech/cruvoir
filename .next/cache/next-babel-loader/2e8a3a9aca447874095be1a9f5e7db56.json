{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useContext, useRef } from 'react';\nimport { useClickOutside, usePopup } from \"../../../../hooks\";\nimport { AuthModalContext } from \"../../../../AuthModalContext\";\nimport cn from 'classnames';\nimport { Link } from \"../../../../Link\";\nimport { UserContext } from \"../../../../UserContext\";\nimport { useTranslation } from \"../../../../../../i18n\";\nexport function UserMenu(props) {\n  const {\n    t\n  } = useTranslation();\n  const authModalCtx = useContext(AuthModalContext);\n  const userCtx = useContext(UserContext);\n  const closeMenu = props.closeMenu;\n  const popup = usePopup();\n  const popupRef = useRef(null);\n  const intactId = 'user-menu';\n  useClickOutside({\n    callback: popup.close,\n    intactId: intactId,\n    reference: popupRef\n  });\n  const showSignIn = useCallback(() => {\n    authModalCtx.setActive('signin');\n    closeMenu();\n    popup.close();\n  }, [authModalCtx, closeMenu, popup]);\n  const signOut = useCallback(() => {\n    userCtx.signOut();\n    closeMenu();\n    popup.close();\n  }, [closeMenu, popup, userCtx]);\n  const close = useCallback(() => {\n    closeMenu();\n    popup.close();\n  }, [closeMenu, popup]);\n  return __jsx(\"div\", {\n    className: props.className\n  }, userCtx.user ? __jsx(\"div\", {\n    className: \"dropdown\"\n  }, __jsx(\"button\", {\n    className: \"button\",\n    \"data-intact-id\": intactId,\n    onClick: popup.toggle\n  }, props.welcomeMessage), __jsx(\"div\", {\n    className: cn('list', {\n      'is-shown': popup.isShown\n    }),\n    ref: popupRef\n  }, __jsx(Link, {\n    className: \"link\",\n    href: \"/profile/general\",\n    onClick: close\n  }, t('profileSetting_plural')), __jsx(Link, {\n    className: \"link\",\n    href: \"/profile/addresses\",\n    onClick: close\n  }, t('shippingAddress_plural')), __jsx(Link, {\n    className: \"link\",\n    href: \"/profile/orders\",\n    onClick: close\n  }, t('orderHistory_plural')), __jsx(\"button\", {\n    className: \"link\",\n    onClick: signOut\n  }, t('signOut')))) : __jsx(\"button\", {\n    className: \"link\",\n    onClick: showSignIn\n  }, t('signIn')));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/Layout/Header/Menu/UserMenu/index.tsx"],"names":["useCallback","useContext","useRef","useClickOutside","usePopup","AuthModalContext","cn","Link","UserContext","useTranslation","UserMenu","props","t","authModalCtx","userCtx","closeMenu","popup","popupRef","intactId","callback","close","reference","showSignIn","setActive","signOut","className","user","toggle","welcomeMessage","isShown"],"mappings":"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","sourcesContent":["import {useCallback, useContext, useRef} from 'react'\nimport {useClickOutside, usePopup} from 'components/common/hooks'\nimport {AuthModalContext} from 'components/common/AuthModalContext'\nimport cn from 'classnames'\nimport {Link} from 'components/common/Link'\nimport {UserContext} from 'components/common/UserContext'\nimport {useTranslation} from 'i18n'\n\nexport function UserMenu(props: {\n  className?: string\n  closeMenu: () => void\n  welcomeMessage: string\n}) {\n  const {t} = useTranslation()\n  const authModalCtx = useContext(AuthModalContext)\n  const userCtx = useContext(UserContext)\n  const closeMenu = props.closeMenu\n  const popup = usePopup()\n  const popupRef = useRef(null)\n  const intactId = 'user-menu'\n  useClickOutside({callback: popup.close, intactId: intactId, reference: popupRef})\n\n  const showSignIn = useCallback(() => {\n    authModalCtx.setActive('signin')\n    closeMenu()\n    popup.close()\n  }, [authModalCtx, closeMenu, popup])\n\n  const signOut = useCallback(() => {\n    userCtx.signOut()\n    closeMenu()\n    popup.close()\n  }, [closeMenu, popup, userCtx])\n\n  const close = useCallback(() => {\n    closeMenu()\n    popup.close()\n  }, [closeMenu, popup])\n\n  return <div className={props.className}>\n    {userCtx.user\n      ? <div className=\"dropdown\">\n        <button className=\"button\" data-intact-id={intactId} onClick={popup.toggle}>{props.welcomeMessage}</button>\n\n        <div className={cn('list', {'is-shown': popup.isShown})} ref={popupRef}>\n          <Link className=\"link\" href=\"/profile/general\" onClick={close}>{t('profileSetting_plural')}</Link>\n          <Link className=\"link\" href=\"/profile/addresses\" onClick={close}>{t('shippingAddress_plural')}</Link>\n          <Link className=\"link\" href=\"/profile/orders\" onClick={close}>{t('orderHistory_plural')}</Link>\n          <button className=\"link\" onClick={signOut}>{t('signOut')}</button>\n        </div>\n      </div>\n\n      : <button className=\"link\" onClick={showSignIn}>{t('signIn')}</button>\n    }\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}