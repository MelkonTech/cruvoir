{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Checkbox, Input } from \"../../../common/form\";\nimport { Form as FormikForm, useFormikContext } from 'formik';\nimport { Button } from \"../../../common/Button\";\nimport { useTranslation } from \"../../../../i18n\";\nexport function Form(props) {\n  _s();\n\n  const {\n    isValid,\n    isSubmitting\n  } = useFormikContext();\n  const {\n    t\n  } = useTranslation();\n  return __jsx(FormikForm, {\n    className: \"form\"\n  }, __jsx(Input, {\n    className: \"field span--2\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: t('email')\n  }), __jsx(Input, {\n    className: \"field span--2\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: t('password')\n  }), __jsx(Checkbox, {\n    className: \"field span--1\",\n    caption: t('rememberMe'),\n    name: \"rememberMe\"\n  }), __jsx(\"button\", {\n    className: \"text-button span--1\",\n    onClick: props.showForgot,\n    type: \"button\"\n  }, t('forgotYourPassword'), \"?\"), props.errorMessages.length > 0 && __jsx(\"div\", {\n    className: \"error-message span--2\"\n  }, props.errorMessages.map(message => __jsx(\"div\", {\n    className: \"row\",\n    key: message\n  }, message))), __jsx(Button, {\n    className: \"button span--2\",\n    disabled: !isValid,\n    isLoading: isSubmitting,\n    isSubmit: true,\n    width: \"flex\"\n  }, t('signIn')));\n}\n\n_s(Form, \"FPYNhX63pNyQ1cuncPBRHCCWa08=\", false, function () {\n  return [useFormikContext, useTranslation];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/auth/SignIn/Form/index.tsx"],"names":["Checkbox","Input","Form","FormikForm","useFormikContext","Button","useTranslation","props","isValid","isSubmitting","t","showForgot","errorMessages","length","map","message"],"mappings":";;;;AAAA,SAAQA,QAAR,EAAkBC,KAAlB;AACA,SAAQC,IAAI,IAAIC,UAAhB,EAA4BC,gBAA5B,QAAmD,QAAnD;AACA,SAAQC,MAAR;AACA,SAAQC,cAAR;AAEA,OAAO,SAASJ,IAAT,CAAcK,KAAd,EAGJ;AAAA;;AACD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA0BL,gBAAgB,EAAhD;AACA,QAAM;AAACM,IAAAA;AAAD,MAAMJ,cAAc,EAA1B;AAEA,SAAO,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,KACL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAA8C,IAAA,IAAI,EAAC,OAAnD;AAA2D,IAAA,WAAW,EAAEI,CAAC,CAAC,OAAD;AAAzE,IADK,EAEL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,IAAI,EAAC,UAAtD;AAAiE,IAAA,WAAW,EAAEA,CAAC,CAAC,UAAD;AAA/E,IAFK,EAGL,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAoC,IAAA,OAAO,EAAEA,CAAC,CAAC,YAAD,CAA9C;AAA8D,IAAA,IAAI,EAAC;AAAnE,IAHK,EAIL;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAwC,IAAA,OAAO,EAAEH,KAAK,CAACI,UAAvD;AAAmE,IAAA,IAAI,EAAC;AAAxE,KAAkFD,CAAC,CAAC,oBAAD,CAAnF,MAJK,EAMJH,KAAK,CAACK,aAAN,CAAoBC,MAApB,GAA6B,CAA7B,IAAkC;AAAK,IAAA,SAAS,EAAC;AAAf,KAChCN,KAAK,CAACK,aAAN,CAAoBE,GAApB,CAAwBC,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEA;AAA1B,KAAoCA,OAApC,CAAnC,CADgC,CAN9B,EAUL,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,QAAQ,EAAE,CAACP,OAFb;AAGE,IAAA,SAAS,EAAEC,YAHb;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC;AALR,KAOGC,CAAC,CAAC,QAAD,CAPJ,CAVK,CAAP;AAoBD;;GA3BeR,I;UAIkBE,gB,EACpBE,c;;;KALEJ,I","sourcesContent":["import {Checkbox, Input} from 'components/common/form'\nimport {Form as FormikForm, useFormikContext} from 'formik'\nimport {Button} from 'components/common/Button'\nimport {useTranslation} from 'i18n'\n\nexport function Form(props: {\n  errorMessages: string[]\n  showForgot: () => void\n}) {\n  const {isValid, isSubmitting} = useFormikContext()\n  const {t} = useTranslation()\n\n  return <FormikForm className=\"form\">\n    <Input className=\"field span--2\" type=\"email\" name=\"email\" placeholder={t('email')} />\n    <Input className=\"field span--2\" type=\"password\" name=\"password\" placeholder={t('password')} />\n    <Checkbox className=\"field span--1\" caption={t('rememberMe')} name=\"rememberMe\" />\n    <button className=\"text-button span--1\" onClick={props.showForgot} type=\"button\">{t('forgotYourPassword')}?</button>\n\n    {props.errorMessages.length > 0 && <div className=\"error-message span--2\">\n      {props.errorMessages.map(message => <div className=\"row\" key={message}>{message}</div>)}\n    </div>}\n\n    <Button\n      className=\"button span--2\"\n      disabled={!isValid}\n      isLoading={isSubmitting}\n      isSubmit\n      width=\"flex\"\n    >\n      {t('signIn')}\n    </Button>\n  </FormikForm>\n}\n"]},"metadata":{},"sourceType":"module"}