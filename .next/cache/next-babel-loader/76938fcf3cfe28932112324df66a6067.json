{"ast":null,"code":"import * as R from 'ramda';\nimport { capfirst } from \"./\";\nimport { catalogHierarchy } from \"../../../settings\"; // Returns product's gender, category and subcategory based on its tags\n\nexport const productPath = tags => {\n  const gender = (R.find(tag => R.includes(tag.toLowerCase(), R.keys(catalogHierarchy)), tags) || '').toLowerCase();\n  if (!gender) return {};\n  const category = (R.find(tag => R.includes(tag && tag.toLowerCase(), R.pluck('title')(catalogHierarchy[gender].categories)), tags) || '').toLowerCase();\n  const categoryObj = catalogHierarchy[gender] ? R.find(R.propEq('title', category), catalogHierarchy[gender].categories) : {\n    subcategories: []\n  };\n  const subcategory = categoryObj ? (R.find(tag => R.includes(tag.toLowerCase(), R.compose(R.flatten, R.pluck('tags'))(categoryObj.subcategories)), tags) || '').toLowerCase() : '';\n  return {\n    category: capfirst(category),\n    gender: capfirst(gender),\n    subcategory: capfirst(subcategory)\n  };\n};","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/helpers/product-path.tsx"],"names":["R","capfirst","catalogHierarchy","productPath","tags","gender","find","tag","includes","toLowerCase","keys","category","pluck","categories","categoryObj","propEq","subcategories","subcategory","compose","flatten"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AACA,SAAQC,QAAR;AACA,SAAQC,gBAAR,4B,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAgF;AACzG,QAAMC,MAAM,GAAG,CAACL,CAAC,CAACM,IAAF,CAAOC,GAAG,IAAIP,CAAC,CAACQ,QAAF,CAAWD,GAAG,CAACE,WAAJ,EAAX,EAA8BT,CAAC,CAACU,IAAF,CAAOR,gBAAP,CAA9B,CAAd,EAAuEE,IAAvE,KAAgF,EAAjF,EAAqFK,WAArF,EAAf;AAEA,MAAG,CAACJ,MAAJ,EACE,OAAO,EAAP;AAEF,QAAMM,QAAQ,GAAG,CAACX,CAAC,CAACM,IAAF,CAChBC,GAAG,IAAIP,CAAC,CAACQ,QAAF,CAAWD,GAAG,IAAIA,GAAG,CAACE,WAAJ,EAAlB,EAAqCT,CAAC,CAACY,KAAF,CAAQ,OAAR,EAAiBV,gBAAgB,CAACG,MAAD,CAAhB,CAAyBQ,UAA1C,CAArC,CADS,EAEhBT,IAFgB,KAGb,EAHY,EAGRK,WAHQ,EAAjB;AAKA,QAAMK,WAAgD,GAAGZ,gBAAgB,CAACG,MAAD,CAAhB,GACrDL,CAAC,CAACM,IAAF,CAGCN,CAAC,CAACe,MAAF,CAAS,OAAT,EAAkBJ,QAAlB,CAHD,EAG8BT,gBAAgB,CAACG,MAAD,CAAhB,CAAyBQ,UAHvD,CADqD,GAMrD;AAACG,IAAAA,aAAa,EAAE;AAAhB,GANJ;AAQA,QAAMC,WAAmB,GAAGH,WAAW,GACnC,CAACd,CAAC,CAACM,IAAF,CACDC,GAAG,IAAIP,CAAC,CAACQ,QAAF,CAAWD,GAAG,CAACE,WAAJ,EAAX,EAA8BT,CAAC,CAACkB,OAAF,CAInClB,CAAC,CAACmB,OAJiC,EAIxBnB,CAAC,CAACY,KAAF,CAAQ,MAAR,CAJwB,EAIPE,WAAW,CAACE,aAJL,CAA9B,CADN,EAODZ,IAPC,KAQE,EARH,EAQOK,WARP,EADmC,GAWnC,EAXJ;AAaA,SAAO;AACLE,IAAAA,QAAQ,EAAKV,QAAQ,CAACU,QAAD,CADhB;AAELN,IAAAA,MAAM,EAAOJ,QAAQ,CAACI,MAAD,CAFhB;AAGLY,IAAAA,WAAW,EAAEhB,QAAQ,CAACgB,WAAD;AAHhB,GAAP;AAKD,CArCM","sourcesContent":["import * as R from 'ramda'\nimport {capfirst} from 'components/common/helpers'\nimport {catalogHierarchy} from 'settings'\n\n// Returns product's gender, category and subcategory based on its tags\nexport const productPath = (tags: string[]): {category?: string, gender?: string, subcategory?: string} => {\n  const gender = (R.find(tag => R.includes(tag.toLowerCase(), R.keys(catalogHierarchy)), tags) || '').toLowerCase()\n\n  if(!gender)\n    return {}\n\n  const category = (R.find(\n    tag => R.includes(tag && tag.toLowerCase(), R.pluck('title')(catalogHierarchy[gender].categories)),\n    tags,\n  ) || '').toLowerCase()\n\n  const categoryObj: {subcategories: {tags: string[]}[]} = catalogHierarchy[gender]\n    ? R.find<{\n      subcategories: {tags: string[]}[]\n      title: string\n    }>(R.propEq('title', category), catalogHierarchy[gender].categories)\n\n    : {subcategories: []}\n\n  const subcategory: string = categoryObj\n    ? (R.find(\n      tag => R.includes(tag.toLowerCase(), R.compose<\n        {tags: string[]}[],\n        string[][],\n        string[]\n      >(R.flatten, R.pluck('tags'))(categoryObj.subcategories)),\n\n      tags,\n    ) || '').toLowerCase()\n\n    : ''\n\n  return {\n    category   : capfirst(category),\n    gender     : capfirst(gender),\n    subcategory: capfirst(subcategory),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}