{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { Icon } from \"../../Icon\";\nimport styles from \"./index.css\";\nimport { useTranslation } from \"../../../../i18n\"; // How many  % have to scroll down the page to appear \"Back to top\" button.\n\nconst anchorMargin = 20;\nexport function ScrollToTopButton(props) {\n  const {\n    t\n  } = useTranslation();\n  const scrollToTopAnchorRef = useRef(null);\n  const {\n    0: isScrollToTopButtonShown,\n    1: setScrollToTopButtonShown\n  } = useState(false);\n  const scrollToTop = useCallback(() => scrollToTopAnchorRef.current.scrollIntoView({\n    behavior: 'smooth'\n  }), []);\n  useEffect(() => {\n    if ('IntersectionObserver' in window) {\n      const scrollToTopAnchorElement = scrollToTopAnchorRef.current;\n      const observer = new IntersectionObserver(entries => setScrollToTopButtonShown(!entries[0].isIntersecting), {\n        rootMargin: `${anchorMargin}% 0% 0% 0%`\n      });\n      observer.observe(scrollToTopAnchorElement);\n      return () => observer.unobserve(scrollToTopAnchorElement);\n    } else {\n      const handleScroll = () => setScrollToTopButtonShown(window.scrollY > anchorMargin * window.innerHeight / 100);\n\n      window.addEventListener('scroll', handleScroll);\n      return () => window.removeEventListener('scroll', handleScroll);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: cn(styles.scrollToTopButton, props.className),\n    ref: scrollToTopAnchorRef\n  }, __jsx(\"button\", {\n    className: cn('button', {\n      'is-shown': isScrollToTopButtonShown\n    }),\n    onClick: scrollToTop,\n    title: t('backToTop')\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"scroll-to-top-arrow\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}