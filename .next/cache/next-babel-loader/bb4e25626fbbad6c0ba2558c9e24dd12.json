{"ast":null,"code":"import * as R from 'ramda';\nimport { catalogHierarchy } from \"../../../settings\";\nexport function findGenderInProductTags(tags) {\n  const productTags = R.map(R.toLower, tags || []);\n  if (R.includes('women', productTags)) return 'women';\n  if (R.includes('men', productTags)) return 'men';\n  const menTags = R.compose(R.map(R.toLower), R.filter(Boolean), R.chain(R.prop('tags')), R.chain(R.prop('subcategories')))(catalogHierarchy.men.categories);\n  if (R.length(R.intersection(productTags, menTags)) > 0) return 'men';\n  return 'women';\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/helpers/find-gender-in-product-tags.ts"],"names":["R","catalogHierarchy","findGenderInProductTags","tags","productTags","map","toLower","includes","menTags","compose","filter","Boolean","chain","prop","men","categories","length","intersection"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AACA,SAAQC,gBAAR;AAIA,OAAO,SAASC,uBAAT,CAAiCC,IAAjC,EAA8E;AACnF,QAAMC,WAAW,GAAGJ,CAAC,CAACK,GAAF,CAAML,CAAC,CAACM,OAAR,EAAiBH,IAAI,IAAI,EAAzB,CAApB;AAEA,MAAGH,CAAC,CAACO,QAAF,CAAW,OAAX,EAAoBH,WAApB,CAAH,EACE,OAAO,OAAP;AAEF,MAAGJ,CAAC,CAACO,QAAF,CAAW,KAAX,EAAkBH,WAAlB,CAAH,EACE,OAAO,KAAP;AAEF,QAAMI,OAAO,GAAGR,CAAC,CAACS,OAAF,CACdT,CAAC,CAACK,GAAF,CAAML,CAAC,CAACM,OAAR,CADc,EAEdN,CAAC,CAACU,MAAF,CAASC,OAAT,CAFc,EAGdX,CAAC,CAACY,KAAF,CAAyCZ,CAAC,CAACa,IAAF,CAAO,MAAP,CAAzC,CAHc,EAIdb,CAAC,CAACY,KAAF,CAAqDZ,CAAC,CAACa,IAAF,CAAO,eAAP,CAArD,CAJc,EAKdZ,gBAAgB,CAACa,GAAjB,CAAqBC,UALP,CAAhB;AAOA,MAAGf,CAAC,CAACgB,MAAF,CAAShB,CAAC,CAACiB,YAAF,CAAeb,WAAf,EAA4BI,OAA5B,CAAT,IAAiD,CAApD,EACE,OAAO,KAAP;AAEF,SAAO,OAAP;AACD","sourcesContent":["import * as R from 'ramda'\nimport {catalogHierarchy} from 'settings'\n\ntype Subcategory = {tags?: string[]}\n\nexport function findGenderInProductTags(tags: string[] | undefined): 'men' | 'women' {\n  const productTags = R.map(R.toLower, tags || [])\n\n  if(R.includes('women', productTags))\n    return 'women'\n\n  if(R.includes('men', productTags))\n    return 'men'\n\n  const menTags = R.compose(\n    R.map(R.toLower),\n    R.filter(Boolean),\n    R.chain<Subcategory, string | undefined>(R.prop('tags')),\n    R.chain<{subcategories: Subcategory[]}, Subcategory>(R.prop('subcategories')),\n  )(catalogHierarchy.men.categories)\n\n  if(R.length(R.intersection(productTags, menTags)) > 0)\n    return 'men'\n\n  return 'women'\n}\n"]},"metadata":{},"sourceType":"module"}