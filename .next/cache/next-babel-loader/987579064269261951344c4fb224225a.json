{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport ProductQuery from \"./graphql/product.graphql\";\nimport { ProductsSlider } from \"../ProductsSlider\";\nimport { useMemo } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nexport function ProductSliderByCollection(props) {\n  _s();\n\n  const {\n    data: productData,\n    loading: productLoading\n  } = useQuery(ProductQuery, {\n    variables: {\n      handle: props.handle\n    }\n  });\n  const newCollectionProducts = useMemo(() => R.compose(R.pluck('node'), R.pathOr([], ['collectionByHandle', 'products', 'edges']))(productData), [productData]);\n  return !productLoading && newCollectionProducts.length > 0 && __jsx(ProductsSlider, {\n    className: props.className,\n    products: newCollectionProducts\n  });\n}\n\n_s(ProductSliderByCollection, \"D0AAQkfaTBchc/6i3paVbhXrbik=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductSliderByCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSliderByCollection\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/ProductSliderByCollection/index.tsx"],"names":["R","ProductQuery","ProductsSlider","useMemo","useQuery","ProductSliderByCollection","props","data","productData","loading","productLoading","variables","handle","newCollectionProducts","compose","pluck","pathOr","length","className"],"mappings":";;;;AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAEA,OAAOC,YAAP;AACA,SAAQC,cAAR;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,OAAO,SAASC,yBAAT,CAAmCC,KAAnC,EAGJ;AAAA;;AACD,QAAM;AAACC,IAAAA,IAAI,EAAEC,WAAP;AAAoBC,IAAAA,OAAO,EAAEC;AAA7B,MAA+CN,QAAQ,CAC3DH,YAD2D,EAE3D;AAACU,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAAEN,KAAK,CAACM;AAAf;AAAZ,GAF2D,CAA7D;AAKA,QAAMC,qBAAgC,GAAGV,OAAO,CAC9C,MAAMH,CAAC,CAACc,OAAF,CAKJd,CAAC,CAACe,KAAF,CAAQ,MAAR,CALI,EAMJf,CAAC,CAACgB,MAAF,CAA4B,EAA5B,EAAgC,CAAC,oBAAD,EAAuB,UAAvB,EAAmC,OAAnC,CAAhC,CANI,EAOJR,WAPI,CADwC,EAU9C,CAACA,WAAD,CAV8C,CAAhD;AAaA,SAAO,CAACE,cAAD,IAAmBG,qBAAqB,CAACI,MAAtB,GAA+B,CAAlD,IAAuD,MAAC,cAAD;AAC5D,IAAA,SAAS,EAAEX,KAAK,CAACY,SAD2C;AAE5D,IAAA,QAAQ,EAAEL;AAFkD,IAA9D;AAID;;GA1BeR,yB;UAIuCD,Q;;;KAJvCC,yB","sourcesContent":["import * as R from 'ramda'\nimport {Product} from 'components/common/types'\nimport ProductQuery from './graphql/product.graphql'\nimport {ProductsSlider} from 'components/common/ProductsSlider'\nimport {useMemo} from 'react'\nimport {useQuery} from '@apollo/react-hooks'\n\nexport function ProductSliderByCollection(props: {\n  className?: string\n  handle: string\n}) {\n  const {data: productData, loading: productLoading} = useQuery(\n    ProductQuery,\n    {variables: {handle: props.handle}},\n  )\n\n  const newCollectionProducts: Product[] = useMemo(\n    () => R.compose<\n      {collectionByHandle: {products: {edges: {node: Product}[]}}},\n      {node: Product}[],\n      Product[]\n    >(\n      R.pluck('node'),\n      R.pathOr<{node: Product}[]>([], ['collectionByHandle', 'products', 'edges']),\n    )(productData),\n\n    [productData],\n  )\n\n  return !productLoading && newCollectionProducts.length > 0 && <ProductsSlider\n    className={props.className}\n    products={newCollectionProducts}\n  />\n}\n"]},"metadata":{},"sourceType":"module"}