{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useClickOutside, usePopup } from \"../../../hooks\";\nimport cn from 'classnames';\nimport { Link } from \"../../../Link\";\nimport styles from \"./index.css\";\nimport { UnderlineWrapper } from \"../../../UnderlineWrapper\";\nimport { useRef } from 'react';\nexport function Dropdown(props) {\n  const popup = usePopup(false);\n  const popupRef = useRef(null);\n  useClickOutside({\n    callback: popup.close,\n    intactId: props.intactId,\n    reference: popupRef\n  });\n  return __jsx(\"div\", {\n    className: cn(styles.dropdown, props.className)\n  }, __jsx(\"div\", {\n    className: cn('popup', {\n      'is-shown': popup.isShown\n    }),\n    ref: popupRef\n  }, props.items.map(item => item.isHtmlLink ? __jsx(\"a\", {\n    className: \"link\",\n    href: item.href,\n    key: item.title\n  }, item.title) : __jsx(Link, {\n    className: \"link\",\n    href: item.href,\n    key: item.title,\n    onClick: popup.close\n  }, item.title))), __jsx(UnderlineWrapper, {\n    className: \"link\"\n  }, __jsx(\"button\", {\n    className: \"button\",\n    \"data-intact-id\": props.intactId,\n    onClick: popup.toggle\n  }, props.children)));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/Layout/Footer/Dropdown/index.tsx"],"names":["useClickOutside","usePopup","cn","Link","styles","UnderlineWrapper","useRef","Dropdown","props","popup","popupRef","callback","close","intactId","reference","dropdown","className","isShown","items","map","item","isHtmlLink","href","title","toggle","children"],"mappings":";;AAAA,SAAQA,eAAR,EAAyBC,QAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAAQC,IAAR;AACA,OAAOC,MAAP;AACA,SAAQC,gBAAR;AACA,SAAQC,MAAR,QAAqB,OAArB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAUJ;AACD,QAAMC,KAAK,GAAGR,QAAQ,CAAC,KAAD,CAAtB;AACA,QAAMS,QAAQ,GAAGJ,MAAM,CAAC,IAAD,CAAvB;AACAN,EAAAA,eAAe,CAAC;AAACW,IAAAA,QAAQ,EAAEF,KAAK,CAACG,KAAjB;AAAwBC,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAxC;AAAkDC,IAAAA,SAAS,EAAEJ;AAA7D,GAAD,CAAf;AAEA,SAAO;AAAK,IAAA,SAAS,EAAER,EAAE,CAACE,MAAM,CAACW,QAAR,EAAkBP,KAAK,CAACQ,SAAxB;AAAlB,KACL;AAAK,IAAA,SAAS,EAAEd,EAAE,CAAC,OAAD,EAAU;AAAC,kBAAYO,KAAK,CAACQ;AAAnB,KAAV,CAAlB;AAA0D,IAAA,GAAG,EAAEP;AAA/D,KACGF,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,UAAL,GACrB;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,IAAA,IAAI,EAAED,IAAI,CAACE,IAA/B;AAAqC,IAAA,GAAG,EAAEF,IAAI,CAACG;AAA/C,KAAuDH,IAAI,CAACG,KAA5D,CADqB,GAGrB,MAAC,IAAD;AACA,IAAA,SAAS,EAAC,MADV;AAEA,IAAA,IAAI,EAAEH,IAAI,CAACE,IAFX;AAGA,IAAA,GAAG,EAAEF,IAAI,CAACG,KAHV;AAIA,IAAA,OAAO,EAAEd,KAAK,CAACG;AAJf,KAMCQ,IAAI,CAACG,KANN,CAHH,CADH,CADK,EAeL,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAC;AAA5B,KACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,sBAAgBf,KAAK,CAACK,QAAjD;AAA2D,IAAA,OAAO,EAAEJ,KAAK,CAACe;AAA1E,KACGhB,KAAK,CAACiB,QADT,CADF,CAfK,CAAP;AAqBD","sourcesContent":["import {useClickOutside, usePopup} from 'components/common/hooks'\nimport cn from 'classnames'\nimport {Link} from 'components/common/Link'\nimport styles from './index.css'\nimport {UnderlineWrapper} from 'components/common/UnderlineWrapper'\nimport {useRef} from 'react'\n\nexport function Dropdown(props: {\n  children: string\n  className?: string\n  intactId: string\n\n  items: {\n    href: string\n    isHtmlLink?: boolean\n    title: string\n  }[]\n}) {\n  const popup = usePopup(false)\n  const popupRef = useRef(null)\n  useClickOutside({callback: popup.close, intactId: props.intactId, reference: popupRef})\n\n  return <div className={cn(styles.dropdown, props.className)}>\n    <div className={cn('popup', {'is-shown': popup.isShown})} ref={popupRef}>\n      {props.items.map(item => item.isHtmlLink\n        ? <a className=\"link\" href={item.href} key={item.title}>{item.title}</a>\n\n        : <Link\n          className=\"link\"\n          href={item.href}\n          key={item.title}\n          onClick={popup.close}\n        >\n          {item.title}\n        </Link>)}\n    </div>\n\n    <UnderlineWrapper className=\"link\">\n      <button className=\"button\" data-intact-id={props.intactId} onClick={popup.toggle}>\n        {props.children}\n      </button>\n    </UnderlineWrapper>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}