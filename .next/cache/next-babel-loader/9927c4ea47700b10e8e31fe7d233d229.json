{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Checkbox, Input } from \"../../../common/form\";\nimport { Form as FormikForm, useFormikContext } from 'formik';\nimport { Button } from \"../../../common/Button\";\nimport { useTranslation } from \"../../../../i18n\";\nexport function Form(props) {\n  const {\n    isValid,\n    isSubmitting\n  } = useFormikContext();\n  const {\n    t\n  } = useTranslation();\n  return __jsx(FormikForm, {\n    className: \"form\"\n  }, __jsx(Input, {\n    className: \"field span--1\",\n    type: \"text\",\n    name: \"firstName\",\n    placeholder: t('name')\n  }), __jsx(Input, {\n    className: \"field span--1\",\n    type: \"text\",\n    name: \"lastName\",\n    placeholder: t('lastName')\n  }), __jsx(Input, {\n    className: \"field span--2\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: t('email')\n  }), __jsx(Input, {\n    className: \"field span--2\",\n    type: \"tel\",\n    name: \"phone\",\n    placeholder: t('phone')\n  }), __jsx(Input, {\n    className: \"field span--2\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: t('password')\n  }), __jsx(Input, {\n    className: \"field span--2\",\n    type: \"password\",\n    name: \"password2\",\n    placeholder: t('confirmPassword')\n  }), __jsx(Checkbox, {\n    className: \"field span--2\",\n    caption: t('get10OffWhenYouSignUp'),\n    name: \"acceptsMarketing\"\n  }), props.errorMessages.length > 0 && __jsx(\"div\", {\n    className: \"error-message span--2\"\n  }, props.errorMessages.map(message => __jsx(\"div\", {\n    className: \"row\",\n    key: message\n  }, message))), __jsx(Button, {\n    className: \"button span--2\",\n    disabled: !isValid,\n    isLoading: isSubmitting,\n    isSubmit: true,\n    width: \"flex\"\n  }, t('createAccount')));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/auth/SignUp/Form/index.tsx"],"names":["Checkbox","Input","Form","FormikForm","useFormikContext","Button","useTranslation","props","isValid","isSubmitting","t","errorMessages","length","map","message"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,KAAlB;AACA,SAAQC,IAAI,IAAIC,UAAhB,EAA4BC,gBAA5B,QAAmD,QAAnD;AACA,SAAQC,MAAR;AACA,SAAQC,cAAR;AAEA,OAAO,SAASJ,IAAT,CAAcK,KAAd,EAEJ;AACD,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA0BL,gBAAgB,EAAhD;AACA,QAAM;AAACM,IAAAA;AAAD,MAAMJ,cAAc,EAA1B;AAEA,SAAO,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC;AAAtB,KACL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,WAAlD;AAA8D,IAAA,WAAW,EAAEI,CAAC,CAAC,MAAD;AAA5E,IADK,EAEL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAA6D,IAAA,WAAW,EAAEA,CAAC,CAAC,UAAD;AAA3E,IAFK,EAGL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAA8C,IAAA,IAAI,EAAC,OAAnD;AAA2D,IAAA,WAAW,EAAEA,CAAC,CAAC,OAAD;AAAzE,IAHK,EAIL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,KAAtC;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,WAAW,EAAEA,CAAC,CAAC,OAAD;AAAvE,IAJK,EAKL,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,IAAI,EAAC,UAAtD;AAAiE,IAAA,WAAW,EAAEA,CAAC,CAAC,UAAD;AAA/E,IALK,EAML,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,IAAI,EAAC,WAAtD;AAAkE,IAAA,WAAW,EAAEA,CAAC,CAAC,iBAAD;AAAhF,IANK,EAOL,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,eAApB;AAAoC,IAAA,OAAO,EAAEA,CAAC,CAAC,uBAAD,CAA9C;AAAyE,IAAA,IAAI,EAAC;AAA9E,IAPK,EASJH,KAAK,CAACI,aAAN,CAAoBC,MAApB,GAA6B,CAA7B,IAAkC;AAAK,IAAA,SAAS,EAAC;AAAf,KAChCL,KAAK,CAACI,aAAN,CAAoBE,GAApB,CAAwBC,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEA;AAA1B,KAAoCA,OAApC,CAAnC,CADgC,CAT9B,EAaL,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,QAAQ,EAAE,CAACN,OAFb;AAGE,IAAA,SAAS,EAAEC,YAHb;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAC;AALR,KAOGC,CAAC,CAAC,eAAD,CAPJ,CAbK,CAAP;AAuBD","sourcesContent":["import {Checkbox, Input} from 'components/common/form'\nimport {Form as FormikForm, useFormikContext} from 'formik'\nimport {Button} from 'components/common/Button'\nimport {useTranslation} from 'i18n'\n\nexport function Form(props: {\n  errorMessages: string[]\n}) {\n  const {isValid, isSubmitting} = useFormikContext()\n  const {t} = useTranslation()\n\n  return <FormikForm className=\"form\">\n    <Input className=\"field span--1\" type=\"text\" name=\"firstName\" placeholder={t('name')} />\n    <Input className=\"field span--1\" type=\"text\" name=\"lastName\" placeholder={t('lastName')} />\n    <Input className=\"field span--2\" type=\"email\" name=\"email\" placeholder={t('email')} />\n    <Input className=\"field span--2\" type=\"tel\" name=\"phone\" placeholder={t('phone')} />\n    <Input className=\"field span--2\" type=\"password\" name=\"password\" placeholder={t('password')} />\n    <Input className=\"field span--2\" type=\"password\" name=\"password2\" placeholder={t('confirmPassword')} />\n    <Checkbox className=\"field span--2\" caption={t('get10OffWhenYouSignUp')} name=\"acceptsMarketing\" />\n\n    {props.errorMessages.length > 0 && <div className=\"error-message span--2\">\n      {props.errorMessages.map(message => <div className=\"row\" key={message}>{message}</div>)}\n    </div>}\n\n    <Button\n      className=\"button span--2\"\n      disabled={!isValid}\n      isLoading={isSubmitting}\n      isSubmit\n      width=\"flex\"\n    >\n      {t('createAccount')}\n    </Button>\n  </FormikForm>\n}\n"]},"metadata":{},"sourceType":"module"}