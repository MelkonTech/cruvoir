{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport cn from 'classnames';\nimport { Link } from \"../../../common/Link\";\nimport moment from 'moment';\nimport styles from \"./index.css\";\nimport { useTranslation } from \"../../../../i18n\";\nconst colorNames = ['aquamarine', 'orchid', 'mediumpurple'];\nexport function PromoCard(props) {\n  _s();\n\n  const {\n    i18n\n  } = useTranslation();\n  return __jsx(\"div\", {\n    className: cn(styles.promoCard, props.className)\n  }, __jsx(\"div\", {\n    className: \"section\"\n  }, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(Link, {\n    as: props.as,\n    className: \"title\",\n    href: props.href\n  }, props.title), ' ', __jsx(\"time\", {\n    className: \"date\",\n    dateTime: props.date\n  }, moment(props.date).locale(i18n.language || i18n.options['defaultLanguage']).format('MMMM D, YYYY'))), __jsx(\"p\", {\n    className: \"description\"\n  }, props.description), __jsx(\"div\", {\n    className: \"tags\"\n  }, props.tags.map(tag => __jsx(\"div\", {\n    className: \"tag\",\n    key: tag\n  }, tag)))), __jsx(\"div\", {\n    className: cn('picture', {\n      [`background-color--${colorNames[Array.from(props.slug).map((char, index) => props.slug.charCodeAt(index)).reduce((a, b) => a + b, 0) % colorNames.length]}`]: !props.imagePath\n    })\n  }, props.imagePath && !props.videoPath && __jsx(\"img\", {\n    alt: props.title,\n    className: \"image\",\n    src: props.imagePath\n  }), props.videoPath && __jsx(\"video\", {\n    className: \"video\",\n    src: props.videoPath\n  })));\n}\n\n_s(PromoCard, \"9F94k15HcPTZUlG5WJ6hySC2iEY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PromoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PromoCard\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/blog/common/PromoCard/index.tsx"],"names":["cn","Link","moment","styles","useTranslation","colorNames","PromoCard","props","i18n","promoCard","className","as","href","title","date","locale","language","options","format","description","tags","map","tag","Array","from","slug","char","index","charCodeAt","reduce","a","b","length","imagePath","videoPath"],"mappings":";;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,SAAQC,IAAR;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP;AACA,SAAQC,cAAR;AACA,MAAMC,UAAU,GAAG,CAAC,YAAD,EAAe,QAAf,EAAyB,cAAzB,CAAnB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAWJ;AAAA;;AACD,QAAM;AAACC,IAAAA;AAAD,MAASJ,cAAc,EAA7B;AAEA,SAAO;AAAK,IAAA,SAAS,EAAEJ,EAAE,CAACG,MAAM,CAACM,SAAR,EAAmBF,KAAK,CAACG,SAAzB;AAAlB,KACL;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEH,KAAK,CAACI,EAAhB;AAAoB,IAAA,SAAS,EAAC,OAA9B;AAAsC,IAAA,IAAI,EAAEJ,KAAK,CAACK;AAAlD,KAAyDL,KAAK,CAACM,KAA/D,CADF,EAEG,GAFH,EAIE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEN,KAAK,CAACO;AAAvC,KACGZ,MAAM,CAACK,KAAK,CAACO,IAAP,CAAN,CAAmBC,MAAnB,CAA0BP,IAAI,CAACQ,QAAL,IAAiBR,IAAI,CAACS,OAAL,CAAa,iBAAb,CAA3C,EAA4EC,MAA5E,CAAmF,cAAnF,CADH,CAJF,CADF,EAUE;AAAG,IAAA,SAAS,EAAC;AAAb,KAA4BX,KAAK,CAACY,WAAlC,CAVF,EAYE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGZ,KAAK,CAACa,IAAN,CAAWC,GAAX,CAAeC,GAAG,IAAI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEA;AAA1B,KAAgCA,GAAhC,CAAtB,CADH,CAZF,CADK,EAkBL;AACE,IAAA,SAAS,EAAEtB,EAAE,CACX,SADW,EAGX;AAAC,OAAE,qBAAoBK,UAAU,CAC/BkB,KAAK,CACFC,IADH,CACQjB,KAAK,CAACkB,IADd,EAEGJ,GAFH,CAEO,CAACK,IAAD,EAAOC,KAAP,KAAiBpB,KAAK,CAACkB,IAAN,CAAWG,UAAX,CAAsBD,KAAtB,CAFxB,EAGGE,MAHH,CAGU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAHxB,EAG2B,CAH3B,IAGgC1B,UAAU,CAAC2B,MAJZ,CAK/B,EALD,GAKK,CAACzB,KAAK,CAAC0B;AALb,KAHW;AADf,KAYG1B,KAAK,CAAC0B,SAAN,IAAmB,CAAC1B,KAAK,CAAC2B,SAA1B,IAAuC;AAAK,IAAA,GAAG,EAAE3B,KAAK,CAACM,KAAhB;AAAuB,IAAA,SAAS,EAAC,OAAjC;AAAyC,IAAA,GAAG,EAAEN,KAAK,CAAC0B;AAApD,IAZ1C,EAaG1B,KAAK,CAAC2B,SAAN,IAAmB;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,GAAG,EAAE3B,KAAK,CAAC2B;AAApC,IAbtB,CAlBK,CAAP;AAkCD;;GAhDe5B,S;UAYCF,c;;;KAZDE,S","sourcesContent":["import cn from 'classnames'\nimport {Link} from 'components/common/Link'\nimport moment from 'moment'\nimport styles from './index.css'\nimport {useTranslation} from 'i18n'\nconst colorNames = ['aquamarine', 'orchid', 'mediumpurple']\n\nexport function PromoCard(props: {\n  as: string\n  className?: string\n  date: string\n  description: string\n  href: string\n  imagePath: string\n  slug: string\n  tags: string[]\n  title: string\n  videoPath?: string\n}) {\n  const {i18n} = useTranslation()\n\n  return <div className={cn(styles.promoCard, props.className)}>\n    <div className=\"section\">\n      <div className=\"header\">\n        <Link as={props.as} className=\"title\" href={props.href}>{props.title}</Link>\n        {' '}\n\n        <time className=\"date\" dateTime={props.date}>\n          {moment(props.date).locale(i18n.language || i18n.options['defaultLanguage']).format('MMMM D, YYYY')}\n        </time>\n      </div>\n\n      <p className=\"description\">{props.description}</p>\n\n      <div className=\"tags\">\n        {props.tags.map(tag => <div className=\"tag\" key={tag}>{tag}</div>)}\n      </div>\n    </div>\n\n    <div\n      className={cn(\n        'picture',\n\n        {[`background-color--${colorNames[\n          Array\n            .from(props.slug)\n            .map((char, index) => props.slug.charCodeAt(index))\n            .reduce((a, b) => a + b, 0) % colorNames.length\n        ]}`]: !props.imagePath},\n      )}\n    >\n      {props.imagePath && !props.videoPath && <img alt={props.title} className=\"image\" src={props.imagePath} />}\n      {props.videoPath && <video className=\"video\" src={props.videoPath} />}\n    </div>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}