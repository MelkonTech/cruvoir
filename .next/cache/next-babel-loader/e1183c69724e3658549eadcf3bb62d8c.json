{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { Icon } from \"../../../../../common/Icon\";\nimport { ListItem } from \"../../common/ListItem\";\nimport listItemStyles from \"../../common/ListItem/index.css\";\nimport styles from \"./index.css\";\nimport { useTranslation } from \"../../../../../../i18n\";\nconst monthNames = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nexport function List(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: isContentShown,\n    1: setContentShown\n  } = useState(true);\n  const toggleFolding = useCallback(() => setContentShown(isShown => !isShown), []);\n  return __jsx(\"div\", {\n    className: cn(styles.list, {\n      'is-folded': isContentShown\n    })\n  }, __jsx(\"header\", {\n    className: cn(listItemStyles.listItem, 'header', {\n      'is-selected': props.selectedYear === props.year\n    }),\n    onClick: toggleFolding\n  }, props.year.toString(), __jsx(Icon, {\n    className: \"icon\",\n    name: \"next-arrow\"\n  })), __jsx(\"div\", {\n    className: \"content\"\n  }, R.map(month => __jsx(ListItem, {\n    className: cn('link', {\n      'is-selected': props.selectedYear === props.year && props.selectedMonth === month\n    }),\n    key: month,\n    href: `/[gender]/[month]?gender=${props.year}&month=${String(month).padStart(2, '0')}`,\n    as: `/${props.year}/${String(month).padStart(2, '0')}`\n  }, t(`monthName.${monthNames[month - 1]}`)), R.range(1, 13))));\n}","map":null,"metadata":{},"sourceType":"module"}