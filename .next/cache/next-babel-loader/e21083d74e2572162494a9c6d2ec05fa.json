{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'cross-fetch'; // Do not change the order of import of styles!\n\nimport \"../public/static/reset.css\";\nimport \"../public/static/variables.css\";\nimport \"../public/static/fonts.css\";\nimport \"../public/static/global.css\";\nimport * as R from 'ramda';\nimport { addTranslationsFromPO, getCookie, isServer, prismicClient } from \"../components/common/helpers\";\nimport { ApolloClient, InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-boost';\nimport { PortalProvider } from \"../components/common/Portal\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { AuthModalContextProvider } from \"../components/common/AuthModalContext\";\nimport { CartContextProvider } from \"../components/common/CartContext\";\nimport { createElement } from 'react';\nimport { createHttpLink } from 'apollo-link-http';\nimport { CurrencyContextProvider } from \"../components/common/CurrencyContext\";\nimport Error from 'next/error';\nimport { FeaturedMenuContextProvider } from \"../components/common/FeaturedMenuContext\";\nconst fragmentsTypes = {\n  __schema: {\n    types: [{\n      kind: \"INTERFACE\",\n      name: \"Node\",\n      possibleTypes: [{\n        name: \"AppliedGiftCard\"\n      }, {\n        name: \"Article\"\n      }, {\n        name: \"Blog\"\n      }, {\n        name: \"Checkout\"\n      }, {\n        name: \"CheckoutLineItem\"\n      }, {\n        name: \"Collection\"\n      }, {\n        name: \"Comment\"\n      }, {\n        name: \"MailingAddress\"\n      }, {\n        name: \"Metafield\"\n      }, {\n        name: \"Order\"\n      }, {\n        name: \"Page\"\n      }, {\n        name: \"Payment\"\n      }, {\n        name: \"Product\"\n      }, {\n        name: \"ProductOption\"\n      }, {\n        name: \"ProductVariant\"\n      }, {\n        name: \"ShopPolicy\"\n      }]\n    }, {\n      kind: \"INTERFACE\",\n      name: \"DiscountApplication\",\n      possibleTypes: [{\n        name: \"AutomaticDiscountApplication\"\n      }, {\n        name: \"DiscountCodeApplication\"\n      }, {\n        name: \"ManualDiscountApplication\"\n      }, {\n        name: \"ScriptDiscountApplication\"\n      }]\n    }, {\n      kind: \"UNION\",\n      name: \"PricingValue\",\n      possibleTypes: [{\n        name: \"PricingPercentageValue\"\n      }, {\n        name: \"MoneyV2\"\n      }]\n    }, {\n      kind: \"INTERFACE\",\n      name: \"HasMetafields\",\n      possibleTypes: [{\n        name: \"Product\"\n      }, {\n        name: \"ProductVariant\"\n      }]\n    }, {\n      kind: \"UNION\",\n      name: \"MetafieldParentResource\",\n      possibleTypes: [{\n        name: \"Product\"\n      }, {\n        name: \"ProductVariant\"\n      }]\n    }, {\n      kind: \"INTERFACE\",\n      name: \"DisplayableError\",\n      possibleTypes: [{\n        name: \"CheckoutUserError\"\n      }, {\n        name: \"CustomerUserError\"\n      }, {\n        name: \"UserError\"\n      }]\n    }]\n  }\n};\nimport getConfig from 'next/config';\nimport { getDataFromTree } from '@apollo/react-ssr';\nimport Head from 'next/head';\nimport i18n from \"../i18n\";\nimport { Loading } from \"../components/common/Loading\";\nimport NextApp from 'next/app';\nimport { PageAnimation } from \"../components/common/PageAnimation\";\nimport { PageTransition } from 'next-page-transitions';\nimport Prismic from 'prismic-javascript';\nimport { RecentContextProvider } from \"../components/common/RecentContext\";\nimport { setContext } from 'apollo-link-context';\nimport { UserContextProvider } from \"../components/common/UserContext\";\nimport { WishListContextProvider } from \"../components/common/WishListContext\";\nimport withApollo from 'next-with-apollo';\nconst {\n  publicRuntimeConfig\n} = getConfig();\nif (!isServer()) document.querySelectorAll('[data-react-portal]').forEach(n => n.remove());\n\ntry {\n  if (publicRuntimeConfig.NEXT_PUBLIC_GA_TRACKING_CODE && false && window['ga']) {\n    const ga = window['ga'];\n\n    require('autotrack/autotrack.js');\n\n    ga('create', publicRuntimeConfig.NEXT_PUBLIC_GA_TRACKING_CODE, 'auto');\n    ga('send', 'pageview');\n  }\n} catch (error) {\n  console.error('GA failed');\n  console.error(error);\n}\n\nclass App extends NextApp {\n  static async getInitialProps(params) {\n    var _pageMetatagsResponse, _pageMetatagsResponse2;\n\n    let pageProps = {};\n    let pageMetatagsResponse;\n\n    try {\n      pageMetatagsResponse = (await prismicClient(params.req).query([Prismic.Predicates.at('document.type', 'pagemetatags'), Prismic.Predicates.any('my.pagemetatags.url', [`${publicRuntimeConfig.NEXT_PUBLIC_APP_URL}${params.ctx.asPath}`, `${publicRuntimeConfig.NEXT_PUBLIC_APP_URL}${params.ctx.asPath}/`, `${publicRuntimeConfig.NEXT_PUBLIC_BLOG_URL}${params.ctx.asPath}`, `${publicRuntimeConfig.NEXT_PUBLIC_BLOG_URL}${params.ctx.asPath}/`])], {})).results[0];\n    } catch (error) {\n      console.error('Error while fetching meta tags');\n      console.error(error);\n    }\n\n    const featuredMenuPrismicResponse = {\n      men: await prismicClient(null).query([Prismic.Predicates.at('document.type', 'mens_featured_menu')], {}),\n      women: await prismicClient(null).query([Prismic.Predicates.at('document.type', 'womens_featured_menu')], {})\n    };\n    if (isServer() && !R.includes(params.ctx.req.headers.host.split(':')[0], [publicRuntimeConfig.NEXT_PUBLIC_APP_BLOG_HOST, publicRuntimeConfig.NEXT_PUBLIC_APP_HOST])) return {\n      pageProps: {\n        error: 'Not found',\n        statusCode: 404\n      }\n    };\n\n    try {\n      pageProps = params.Component.getInitialProps ? await params.Component.getInitialProps(params.ctx) : {};\n    } catch (e) {\n      // Is server side\n      if (Boolean(params.ctx.res)) params.ctx.res.statusCode = 500;\n      pageProps = {\n        error: 'Server error',\n        statusCode: 500\n      };\n    } // Fetch products translations from external tool. English is the default language â€” stored on Shopify side\n\n\n    if (isServer() && params.ctx.req.language && params.ctx.req.language !== 'en') addTranslationsFromPO({\n      i18n: params.ctx.req.i18n,\n      lang: params.ctx.req.language,\n      translations: await (await fetch(`${publicRuntimeConfig.NEXT_PUBLIC_APP_URL.replace('https', 'http')}/api/translations/${params.ctx.req.language}/products`)).json()\n    });\n    let currencyRatesCookie = JSON.parse(getCookie({\n      ctx: params.ctx,\n      name: 'currencyRates'\n    }));\n    return {\n      pageProps: _objectSpread(_objectSpread({}, pageProps), {}, {\n        asPath: params.ctx.asPath,\n        checkoutId: getCookie({\n          ctx: params.ctx,\n          name: 'checkoutId'\n        }),\n        currency: getCookie({\n          ctx: params.ctx,\n          name: 'currency'\n        }) || 'USD',\n        currencyRates: currencyRatesCookie && Object.keys(currencyRatesCookie).length === 0 ? null : currencyRatesCookie,\n        currencyRatesLastUpdatedAt: getCookie({\n          ctx: params.ctx,\n          name: 'currencyRatesLastUpdatedAt'\n        }),\n        featuredMenuPrismicResponse,\n        host: isServer() ? params.ctx.req.headers.host : location.host,\n        isBlogDomain: (isServer() ? params.ctx.req.headers.host : location.host) === publicRuntimeConfig.NEXT_PUBLIC_BLOG_URL.replace(/https?:\\/\\//, ''),\n        metatags: (_pageMetatagsResponse = pageMetatagsResponse) === null || _pageMetatagsResponse === void 0 ? void 0 : _pageMetatagsResponse.data.metatags,\n        pageTitle: (_pageMetatagsResponse2 = pageMetatagsResponse) === null || _pageMetatagsResponse2 === void 0 ? void 0 : _pageMetatagsResponse2.data.title,\n        pathname: params.ctx.pathname,\n        query: params.ctx.query,\n        userToken: getCookie({\n          ctx: params.ctx,\n          name: 'token'\n        })\n      })\n    };\n  }\n\n  render() {\n    if (this.props.pageProps.statusCode === 404) return __jsx(Error, {\n      statusCode: 404\n    });\n    return __jsx(ApolloProvider, {\n      client: this.props.apollo\n    }, __jsx(Head, null, __jsx(\"title\", null, this.props.pageProps.pageTitle || 'Cruvoir'), __jsx(\"link\", {\n      href: \"/static/favicons/dark/16.png\",\n      media: \"(prefers-color-scheme: dark)\",\n      rel: \"icon\",\n      sizes: \"16x16\",\n      type: \"image/png\"\n    }), __jsx(\"link\", {\n      href: \"/static/favicons/dark/32.png\",\n      media: \"(prefers-color-scheme: dark)\",\n      rel: \"icon\",\n      sizes: \"32x32\",\n      type: \"image/png\"\n    }), __jsx(\"link\", {\n      href: \"/static/favicons/dark/60.png\",\n      media: \"(prefers-color-scheme: dark)\",\n      rel: \"icon\",\n      sizes: \"60x60\",\n      type: \"image/png\"\n    }), __jsx(\"link\", {\n      href: \"/static/favicons/light/16.png\",\n      media: \"(prefers-color-scheme: light)\",\n      rel: \"icon\",\n      sizes: \"16x16\",\n      type: \"image/png\"\n    }), __jsx(\"link\", {\n      href: \"/static/favicons/light/32.png\",\n      media: \"(prefers-color-scheme: light)\",\n      rel: \"icon\",\n      sizes: \"32x32\",\n      type: \"image/png\"\n    }), __jsx(\"link\", {\n      href: \"/static/favicons/light/60.png\",\n      media: \"(prefers-color-scheme: light)\",\n      rel: \"icon\",\n      sizes: \"60x60\",\n      type: \"image/png\"\n    }), __jsx(\"meta\", {\n      content: \"width = device-width, minimum-scale = 1, initial-scale = 1, user-scalable = no\",\n      key: \"viewport\",\n      name: \"viewport\"\n    }), R.map(metatag => __jsx(\"meta\", {\n      content: metatag.content,\n      key: metatag.name,\n      name: metatag.name\n    }), this.props.pageProps.metatags || []), __jsx(\"script\", {\n      type: \"text/javascript\",\n      src: \"/static/intercom.js\"\n    }), __jsx(\"script\", {\n      type: \"text/javascript\",\n      src: `https://static.cdn.prismic.io/prismic.min.js?new=true&repo=${publicRuntimeConfig.NEXT_PUBLIC_PRISMIC_REPO}`\n    }), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `!function(f,b,e,v,n,t,s)\n          {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n          n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n          if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n          n.queue=[];t=b.createElement(e);t.async=!0;\n          t.src=v;s=b.getElementsByTagName(e)[0];\n          s.parentNode.insertBefore(t,s)}(window, document,'script',\n          'https://connect.facebook.net/en_US/fbevents.js');\n          fbq('init', '${publicRuntimeConfig.NEXT_PUBLIC_FACEBOOK_PIXEL_ID}');\n          fbq('track', 'PageView');`\n      }\n    }), __jsx(\"script\", {\n      async: true,\n      src: \"https://www.google-analytics.com/analytics.js\"\n    })), __jsx(CurrencyContextProvider, {\n      initialCurrency: this.props.pageProps.currency,\n      initialRates: this.props.pageProps.currencyRates,\n      initialRatesLastUpdatedAt: this.props.pageProps.currencyRatesLastUpdatedAt\n    }, __jsx(PortalProvider, {\n      manager: this.props.portalManager\n    }, __jsx(CartContextProvider, {\n      initialValue: {\n        checkoutId: this.props.pageProps.checkoutId\n      }\n    }, __jsx(AuthModalContextProvider, null, __jsx(UserContextProvider, {\n      initialValue: {\n        token: this.props.pageProps.userToken\n      }\n    }, __jsx(RecentContextProvider, null, __jsx(FeaturedMenuContextProvider, {\n      menPrismicResponse: this.props.pageProps.featuredMenuPrismicResponse.men,\n      womenPrismicResponse: this.props.pageProps.featuredMenuPrismicResponse.women\n    }, __jsx(WishListContextProvider, null, this.props.pageProps.hasPageTransition ? __jsx(PageTransition, {\n      classNames: \"state\",\n      loadingComponent: __jsx(Loading, {\n        isShown: true\n      }),\n      loadingTimeout: 0,\n      monkeyPatchScrolling: true,\n      skipInitialTransition: true,\n      tag: PageAnimation,\n      timeout: 1000\n    }, /*#__PURE__*/createElement(this.props.Component, this.props.pageProps)) : /*#__PURE__*/createElement(this.props.Component, this.props.pageProps))))))))), __jsx(\"div\", {\n      id: \"portal-root\"\n    }));\n  }\n\n}\n\nexport default withApollo(params => new ApolloClient({\n  cache: new InMemoryCache({\n    fragmentMatcher: new IntrospectionFragmentMatcher({\n      introspectionQueryResultData: fragmentsTypes\n    })\n  }).restore(params.initialState || {}),\n  link: setContext((_, linkParams) => _objectSpread({}, linkParams.isInternalAPI && {\n    headers: {\n      'X-Hasura-Role': 'public'\n    }\n  })).concat(createHttpLink({\n    credentials: 'same-origin',\n    fetch: fetch,\n    headers: {\n      // Accept and Content-Type headers are required by Storefront API\n      accept: 'application/json',\n      'content-type': 'application/json',\n      'x-shopify-storefront-access-token': publicRuntimeConfig.NEXT_PUBLIC_SHOPIFY_STOREFRONT_API_TOKEN\n    },\n    uri: uriParams => {\n      if (uriParams.getContext().isInternalAPI) return publicRuntimeConfig.NEXT_PUBLIC_INTERNAL_API_URL;else return publicRuntimeConfig.NEXT_PUBLIC_SHOPIFY_STOREFRONT_API_URL;\n    }\n  }))\n}), {\n  getDataFromTree\n})(i18n.appWithTranslation(App));","map":null,"metadata":{},"sourceType":"module"}