{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useCallback, useEffect, useMemo, useState } from 'react';\nimport Dexie from 'dexie';\nconst db = new Dexie('cruvoirDB');\ndb.version(1).stores({\n  products: 'id'\n});\nexport const RecentContext = /*#__PURE__*/createContext({\n  isReady: false,\n  products: [],\n  saveToRecent: () => {}\n});\nexport function RecentContextProvider(props) {\n  _s();\n\n  const {\n    0: products,\n    1: setProducts\n  } = useState([]);\n  const {\n    0: isReady,\n    1: setIsReady\n  } = useState(false);\n  useEffect(() => {\n    db.table('products').toArray().then(response => {\n      setProducts(response);\n      setIsReady(true);\n    });\n  }, []);\n  const saveToRecent = useCallback(product => {\n    db.table('products').put(product).then(() => db.table('products').toArray().then(response => setProducts(response)));\n  }, [setProducts]);\n  const value = useMemo(() => ({\n    isReady,\n    products,\n    saveToRecent\n  }), [isReady, products, saveToRecent]);\n  return __jsx(RecentContext.Provider, {\n    value: value\n  }, props.children);\n}\n\n_s(RecentContextProvider, \"00+JseyNvroOjueHT3pN5/3ZYoc=\");\n\n_c = RecentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentContextProvider\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/RecentContext/index.tsx"],"names":["createContext","useCallback","useEffect","useMemo","useState","Dexie","db","version","stores","products","RecentContext","isReady","saveToRecent","RecentContextProvider","props","setProducts","setIsReady","table","toArray","then","response","product","put","value","children"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAkCC,WAAlC,EAA+CC,SAA/C,EAA0DC,OAA1D,EAAmEC,QAAnE,QAAkF,OAAlF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AASA,MAAMC,EAAE,GAAG,IAAID,KAAJ,CAAU,WAAV,CAAX;AACAC,EAAE,CAACC,OAAH,CAAW,CAAX,EAAcC,MAAd,CAAqB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAArB;AAEA,OAAO,MAAMC,aAAa,gBAAGV,aAAa,CAAe;AACvDW,EAAAA,OAAO,EAAO,KADyC;AAEvDF,EAAAA,QAAQ,EAAM,EAFyC;AAGvDG,EAAAA,YAAY,EAAE,MAAM,CAAE;AAHiC,CAAf,CAAnC;AAMP,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAA6D;AAAA;;AAClE,QAAM;AAAA,OAACL,QAAD;AAAA,OAAWM;AAAX,MAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUK;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,EAAE,CAACW,KAAH,CAAS,UAAT,EAAqBC,OAArB,GAA+BC,IAA/B,CAAqCC,QAAD,IAAyB;AAC3DL,MAAAA,WAAW,CAACK,QAAD,CAAX;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAMJ,YAAY,GAAGX,WAAW,CAC9BoB,OAAO,IAAI;AACTf,IAAAA,EAAE,CAACW,KAAH,CAAS,UAAT,EAAqBK,GAArB,CAAyBD,OAAzB,EACGF,IADH,CACQ,MAAMb,EAAE,CAACW,KAAH,CAAS,UAAT,EAAqBC,OAArB,GAA+BC,IAA/B,CAAqCC,QAAD,IAAyBL,WAAW,CAACK,QAAD,CAAxE,CADd;AAED,GAJ6B,EAM9B,CAACL,WAAD,CAN8B,CAAhC;AASA,QAAMQ,KAAK,GAAGpB,OAAO,CAAC,OAAO;AAC3BQ,IAAAA,OAD2B;AAE3BF,IAAAA,QAF2B;AAG3BG,IAAAA;AAH2B,GAAP,CAAD,EAIjB,CAACD,OAAD,EAAUF,QAAV,EAAoBG,YAApB,CAJiB,CAArB;AAMA,SAAO,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEW;AAA/B,KACJT,KAAK,CAACU,QADF,CAAP;AAGD;;GA7BeX,qB;;KAAAA,qB","sourcesContent":["import {createContext, ReactNode, useCallback, useEffect, useMemo, useState} from 'react'\nimport Dexie from 'dexie'\nimport {Product} from 'components/common/types'\n\ntype ContextValue = {\n  isReady: boolean\n  products: Product[]\n  saveToRecent: Function\n}\n\nconst db = new Dexie('cruvoirDB')\ndb.version(1).stores({products: 'id'})\n\nexport const RecentContext = createContext<ContextValue>({\n  isReady     : false,\n  products    : [],\n  saveToRecent: () => {},\n})\n\nexport function RecentContextProvider(props: {children: ReactNode}) {\n  const [products, setProducts] = useState([])\n  const [isReady, setIsReady] = useState(false)\n\n  useEffect(() => {\n    db.table('products').toArray().then((response: Product[]) => {\n      setProducts(response)\n      setIsReady(true)\n    })\n  }, [])\n\n  const saveToRecent = useCallback(\n    product => {\n      db.table('products').put(product)\n        .then(() => db.table('products').toArray().then((response: Product[]) => setProducts(response)))\n    },\n\n    [setProducts],\n  )\n\n  const value = useMemo(() => ({\n    isReady,\n    products,\n    saveToRecent,\n  }), [isReady, products, saveToRecent])\n\n  return <RecentContext.Provider value={value}>\n    {props.children}\n  </RecentContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}