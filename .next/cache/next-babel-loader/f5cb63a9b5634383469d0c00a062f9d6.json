{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useField, useFormikContext } from 'formik';\nimport { Field } from \"../common/Field\";\nimport Select from 'react-select';\nimport styles from \"./index.css\";\nimport { useCallback } from 'react';\nexport function Autocomplete(props) {\n  _s();\n\n  const onChange = props.onChange;\n  const [field, meta] = useField(props.name);\n  const {\n    setFieldValue\n  } = useFormikContext();\n  const setValue = useCallback(obj => {\n    setFieldValue(props.name, obj.value);\n    if (typeof onChange === 'function') onChange(obj.value);\n  }, [onChange, props.name, setFieldValue]);\n  return __jsx(Field, {\n    isInvalid: meta.error && meta.touched,\n    errorMessage: meta.error,\n    className: props.className,\n    disabled: props.disabled\n  }, __jsx(Select, {\n    className: styles.autocomplete,\n    classNamePrefix: \"autocomplete\",\n    id: `select-${field.name}`,\n    inputId: `input-${field.name}`,\n    isDisabled: props.disabled,\n    onChange: setValue,\n    options: props.options,\n    value: props.value\n  }));\n}\n\n_s(Autocomplete, \"y8XoG6Oqv/d2NCZwuxJunttYg74=\", false, function () {\n  return [useField, useFormikContext];\n});\n\n_c = Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/form/Autocomplete/index.tsx"],"names":["useField","useFormikContext","Field","Select","styles","useCallback","Autocomplete","props","onChange","field","meta","name","setFieldValue","setValue","obj","value","error","touched","className","disabled","autocomplete","options"],"mappings":";;;;AAAA,SAAQA,QAAR,EAAkBC,gBAAlB,QAAyC,QAAzC;AACA,SAAQC,KAAR;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP;AACA,SAAQC,WAAR,QAA0B,OAA1B;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAOJ;AAAA;;AACD,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBV,QAAQ,CAACO,KAAK,CAACI,IAAP,CAA9B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAkBX,gBAAgB,EAAxC;AAEA,QAAMY,QAAQ,GAAGR,WAAW,CAACS,GAAG,IAAI;AAClCF,IAAAA,aAAa,CAACL,KAAK,CAACI,IAAP,EAAaG,GAAG,CAACC,KAAjB,CAAb;AAEA,QAAG,OAAOP,QAAP,KAAoB,UAAvB,EACEA,QAAQ,CAACM,GAAG,CAACC,KAAL,CAAR;AACH,GAL2B,EAKzB,CAACP,QAAD,EAAWD,KAAK,CAACI,IAAjB,EAAuBC,aAAvB,CALyB,CAA5B;AAOA,SAAO,MAAC,KAAD;AACL,IAAA,SAAS,EAAEF,IAAI,CAACM,KAAL,IAAcN,IAAI,CAACO,OADzB;AAEL,IAAA,YAAY,EAAEP,IAAI,CAACM,KAFd;AAGL,IAAA,SAAS,EAAET,KAAK,CAACW,SAHZ;AAIL,IAAA,QAAQ,EAAEX,KAAK,CAACY;AAJX,KAML,MAAC,MAAD;AACE,IAAA,SAAS,EAAEf,MAAM,CAACgB,YADpB;AAEE,IAAA,eAAe,EAAC,cAFlB;AAGE,IAAA,EAAE,EAAG,UAASX,KAAK,CAACE,IAAK,EAH3B;AAIE,IAAA,OAAO,EAAG,SAAQF,KAAK,CAACE,IAAK,EAJ/B;AAKE,IAAA,UAAU,EAAEJ,KAAK,CAACY,QALpB;AAME,IAAA,QAAQ,EAAEN,QANZ;AAOE,IAAA,OAAO,EAAEN,KAAK,CAACc,OAPjB;AAQE,IAAA,KAAK,EAAEd,KAAK,CAACQ;AARf,IANK,CAAP;AAiBD;;GApCeT,Y;UASQN,Q,EACEC,gB;;;KAVVK,Y","sourcesContent":["import {useField, useFormikContext} from 'formik'\nimport {Field} from 'components/common/form/common/Field'\nimport Select from 'react-select'\nimport styles from './index.css'\nimport {useCallback} from 'react'\n\nexport function Autocomplete(props: {\n  className?: string\n  disabled?: boolean\n  name: string\n  options: {label: string, value: string}[]\n  onChange?: (value: string) => void\n  value: {label: string, value: string}\n}) {\n  const onChange = props.onChange\n  const [field, meta] = useField(props.name)\n  const {setFieldValue} = useFormikContext()\n\n  const setValue = useCallback(obj => {\n    setFieldValue(props.name, obj.value)\n\n    if(typeof onChange === 'function')\n      onChange(obj.value)\n  }, [onChange, props.name, setFieldValue])\n\n  return <Field\n    isInvalid={meta.error && meta.touched}\n    errorMessage={meta.error}\n    className={props.className}\n    disabled={props.disabled}\n  >\n    <Select\n      className={styles.autocomplete}\n      classNamePrefix=\"autocomplete\"\n      id={`select-${field.name}`}\n      inputId={`input-${field.name}`}\n      isDisabled={props.disabled}\n      onChange={setValue}\n      options={props.options}\n      value={props.value}\n    />\n  </Field>\n}\n"]},"metadata":{},"sourceType":"module"}