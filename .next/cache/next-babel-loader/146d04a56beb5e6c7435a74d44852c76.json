{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport cn from 'classnames';\nimport { Link } from \"../Link\";\nimport moment from 'moment';\nimport styles from \"./index.css\";\nimport { useTranslation } from \"../../../i18n\";\nconst colorNames = ['aquamarine', 'orchid', 'mediumpurple'];\nexport function BlogPostCard(props) {\n  _s();\n\n  const {\n    i18n\n  } = useTranslation();\n  return __jsx(\"div\", {\n    className: cn(styles.card, props.className)\n  }, __jsx(\"div\", {\n    className: cn('picture', {\n      [`background-color--${colorNames[Array.from(props.slug).map((char, index) => props.slug.charCodeAt(index)).reduce((a, b) => a + b, 0) % colorNames.length]}`]: !props.imagePath\n    })\n  }, props.imagePath && !props.videoPath && __jsx(\"img\", {\n    alt: props.title,\n    className: \"image\",\n    src: props.imagePath\n  }), props.videoPath && __jsx(\"video\", {\n    className: \"video\",\n    src: props.videoPath\n  })), props.isAbsoluteHref ? __jsx(\"a\", {\n    className: \"title\",\n    href: props.href\n  }, props.title) : __jsx(Link, {\n    as: props.as,\n    className: \"title\",\n    href: props.href\n  }, props.title), __jsx(\"time\", {\n    className: \"date\",\n    dateTime: props.date\n  }, moment(props.date).locale(i18n.language || i18n.options['defaultLanguage']).format('MMMM D, YYYY')));\n}\n\n_s(BlogPostCard, \"9F94k15HcPTZUlG5WJ6hySC2iEY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BlogPostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostCard\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/BlogPostCard/index.tsx"],"names":["cn","Link","moment","styles","useTranslation","colorNames","BlogPostCard","props","i18n","card","className","Array","from","slug","map","char","index","charCodeAt","reduce","a","b","length","imagePath","videoPath","title","isAbsoluteHref","href","as","date","locale","language","options","format"],"mappings":";;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,SAAQC,IAAR;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP;AACA,SAAQC,cAAR;AACA,MAAMC,UAAU,GAAG,CAAC,YAAD,EAAe,QAAf,EAAyB,cAAzB,CAAnB;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAUJ;AAAA;;AACD,QAAM;AAACC,IAAAA;AAAD,MAASJ,cAAc,EAA7B;AAEA,SAAO;AAAK,IAAA,SAAS,EAAEJ,EAAE,CAACG,MAAM,CAACM,IAAR,EAAcF,KAAK,CAACG,SAApB;AAAlB,KACL;AACE,IAAA,SAAS,EAAEV,EAAE,CACX,SADW,EAGX;AAAC,OAAE,qBAAoBK,UAAU,CAC/BM,KAAK,CACFC,IADH,CACQL,KAAK,CAACM,IADd,EAEGC,GAFH,CAEO,CAACC,IAAD,EAAOC,KAAP,KAAiBT,KAAK,CAACM,IAAN,CAAWI,UAAX,CAAsBD,KAAtB,CAFxB,EAGGE,MAHH,CAGU,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAHxB,EAG2B,CAH3B,IAGgCf,UAAU,CAACgB,MAJZ,CAK/B,EALD,GAKK,CAACd,KAAK,CAACe;AALb,KAHW;AADf,KAYGf,KAAK,CAACe,SAAN,IAAmB,CAACf,KAAK,CAACgB,SAA1B,IAAuC;AAAK,IAAA,GAAG,EAAEhB,KAAK,CAACiB,KAAhB;AAAuB,IAAA,SAAS,EAAC,OAAjC;AAAyC,IAAA,GAAG,EAAEjB,KAAK,CAACe;AAApD,IAZ1C,EAaGf,KAAK,CAACgB,SAAN,IAAmB;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,GAAG,EAAEhB,KAAK,CAACgB;AAApC,IAbtB,CADK,EAiBJhB,KAAK,CAACkB,cAAN,GACG;AAAG,IAAA,SAAS,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAElB,KAAK,CAACmB;AAAjC,KAAwCnB,KAAK,CAACiB,KAA9C,CADH,GAEG,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEjB,KAAK,CAACoB,EAAhB;AAAoB,IAAA,SAAS,EAAC,OAA9B;AAAsC,IAAA,IAAI,EAAEpB,KAAK,CAACmB;AAAlD,KAAyDnB,KAAK,CAACiB,KAA/D,CAnBC,EAsBL;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEjB,KAAK,CAACqB;AAAvC,KACG1B,MAAM,CAACK,KAAK,CAACqB,IAAP,CAAN,CAAmBC,MAAnB,CAA0BrB,IAAI,CAACsB,QAAL,IAAiBtB,IAAI,CAACuB,OAAL,CAAa,iBAAb,CAA3C,EAA4EC,MAA5E,CAAmF,cAAnF,CADH,CAtBK,CAAP;AA0BD;;GAvCe1B,Y;UAWCF,c;;;KAXDE,Y","sourcesContent":["import cn from 'classnames'\nimport {Link} from 'components/common/Link'\nimport moment from 'moment'\nimport styles from './index.css'\nimport {useTranslation} from 'i18n'\nconst colorNames = ['aquamarine', 'orchid', 'mediumpurple']\n\nexport function BlogPostCard(props: {\n  as?: string\n  className?: string\n  date: string\n  href: string\n  imagePath: string\n  isAbsoluteHref?: boolean\n  slug: string\n  title: string\n  videoPath?: string\n}) {\n  const {i18n} = useTranslation()\n\n  return <div className={cn(styles.card, props.className)}>\n    <div\n      className={cn(\n        'picture',\n\n        {[`background-color--${colorNames[\n          Array\n            .from(props.slug)\n            .map((char, index) => props.slug.charCodeAt(index))\n            .reduce((a, b) => a + b, 0) % colorNames.length\n        ]}`]: !props.imagePath},\n      )}\n    >\n      {props.imagePath && !props.videoPath && <img alt={props.title} className=\"image\" src={props.imagePath} />}\n      {props.videoPath && <video className=\"video\" src={props.videoPath} />}\n    </div>\n\n    {props.isAbsoluteHref\n      ? <a className=\"title\" href={props.href}>{props.title}</a>\n      : <Link as={props.as} className=\"title\" href={props.href}>{props.title}</Link>\n    }\n\n    <time className=\"date\" dateTime={props.date}>\n      {moment(props.date).locale(i18n.language || i18n.options['defaultLanguage']).format('MMMM D, YYYY')}\n    </time>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}