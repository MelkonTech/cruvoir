{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Children, Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport styles from \"./index.css\";\nexport function Slider(props) {\n  const listRef = useRef(null);\n  const {\n    0: isPrevButtonDisabled,\n    1: setPrevButtonDisabled\n  } = useState(false);\n  const {\n    0: isNextButtonDisabled,\n    1: setNextButtonDisabled\n  } = useState(false);\n  const scrollToNextSlide = useCallback(() => {\n    listRef.current.scroll({\n      behavior: 'smooth',\n      left: listRef.current.scrollLeft + listRef.current.clientWidth\n    });\n  }, []);\n  const scrollToPrevSlide = useCallback(() => {\n    listRef.current.scroll({\n      behavior: 'smooth',\n      left: listRef.current.scrollLeft - listRef.current.clientWidth\n    });\n  }, []);\n  const {\n    0: currentSlideIndex,\n    1: setCurrentSlideIndex\n  } = useState(0);\n  const selectSlide = useCallback(e => {\n    // offset * slideIndex\n    listRef.current.scrollLeft = listRef.current.offsetWidth * Array.from(e.currentTarget.parentElement.children).indexOf(e.currentTarget);\n  }, []);\n  useEffect(() => {\n    if (!listRef.current || !listRef.current.scroll) return;\n    if (Number.isInteger(props.initialSlideNumber)) listRef.current.scroll({\n      behavior: 'auto',\n      left: listRef.current.querySelector('.slide').offsetWidth * props.initialSlideNumber\n    });\n  }, [props.initialSlideNumber]);\n  useEffect(() => {\n    if (!listRef.current) return;\n\n    const handleResize = () => {\n      listRef.current.scrollLeft = listRef.current.scrollLeft;\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [listRef]);\n  useEffect(() => {\n    if (!listRef.current) return;\n    const element = listRef.current;\n\n    const scrollHandler = () => {\n      setPrevButtonDisabled(element.scrollLeft < element.clientWidth / 2);\n      setNextButtonDisabled(element.scrollLeft > element.scrollWidth - element.clientWidth * 1.5);\n      setCurrentSlideIndex(Math.floor((element.scrollLeft + element.offsetWidth / 2) / element.offsetWidth));\n    };\n\n    scrollHandler();\n    element.addEventListener('scroll', scrollHandler);\n    return () => element.removeEventListener('scroll', scrollHandler);\n  }, [props.children]);\n  useEffect(() => {\n    if (props.hasKeyboardNavigation) {\n      const handlerPrev = e => {\n        if (e.key === 'ArrowLeft') scrollToPrevSlide();\n      };\n\n      document.addEventListener('keyup', handlerPrev);\n      return () => document.removeEventListener('keyup', handlerPrev);\n    }\n  }, [props.hasKeyboardNavigation, scrollToPrevSlide]);\n  useEffect(() => {\n    if (props.hasKeyboardNavigation) {\n      const handler = e => {\n        if (e.key === 'ArrowRight') scrollToNextSlide();\n      };\n\n      document.addEventListener('keyup', handler);\n      return () => document.removeEventListener('keyup', handler);\n    }\n  }, [props.hasKeyboardNavigation, scrollToNextSlide]);\n  return __jsx(\"div\", {\n    className: cn({\n      [styles.slider]: !props.noStyles\n    }, props.className)\n  }, Children.count(props.children) > 0 ? __jsx(Fragment, null, __jsx(\"div\", {\n    className: cn('list', props.listClassName),\n    ref: listRef\n  }, props.children, props.hasThumbs && props.images && __jsx(\"div\", {\n    className: \"thumbs\"\n  }, props.images.map((item, index) => __jsx(\"div\", {\n    className: cn('item', {\n      'is-selected': index === currentSlideIndex\n    }),\n    key: index,\n    onClick: selectSlide\n  }, __jsx(\"img\", {\n    alt: item.altText,\n    className: \"image\",\n    src: item.originalSrc\n  }))))), Children.count(props.children) > 1 && __jsx(Fragment, null, props.hasNavigation && __jsx(\"div\", {\n    className: \"navigation\"\n  }, __jsx(\"button\", {\n    className: cn('button', 'type--prev', {\n      'is-disabled': isPrevButtonDisabled,\n      'is-shown': !isPrevButtonDisabled || !isNextButtonDisabled\n    }),\n    onClick: scrollToPrevSlide,\n    type: \"button\"\n  }), __jsx(\"button\", {\n    className: cn('button', 'type--next', {\n      'is-disabled': isNextButtonDisabled,\n      'is-shown': !isPrevButtonDisabled || !isNextButtonDisabled\n    }),\n    onClick: scrollToNextSlide,\n    type: \"button\"\n  })), props.hasNumeration && __jsx(\"div\", {\n    className: \"numeration\"\n  }, `${currentSlideIndex + 1} / ${Children.count(props.children)}`), props.hasPagination && __jsx(\"div\", {\n    className: \"pagination\"\n  }, Children.map(props.children, (item, index) => __jsx(\"button\", {\n    className: cn('button', {\n      'is-selected': index === currentSlideIndex\n    }),\n    key: index,\n    onClick: selectSlide,\n    type: \"button\"\n  }))))) : props.emptyMessage ? typeof props.emptyMessage === 'object' ? props.emptyMessage : __jsx(\"div\", {\n    className: \"empty-message\"\n  }, props.emptyMessage) : __jsx(\"div\", {\n    className: \"empty-message\"\n  }, \"No results\"));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/Slider/index.tsx"],"names":["Children","Fragment","useCallback","useEffect","useRef","useState","cn","styles","Slider","props","listRef","isPrevButtonDisabled","setPrevButtonDisabled","isNextButtonDisabled","setNextButtonDisabled","scrollToNextSlide","current","scroll","behavior","left","scrollLeft","clientWidth","scrollToPrevSlide","currentSlideIndex","setCurrentSlideIndex","selectSlide","e","offsetWidth","Array","from","currentTarget","parentElement","children","indexOf","Number","isInteger","initialSlideNumber","querySelector","handleResize","window","addEventListener","removeEventListener","element","scrollHandler","scrollWidth","Math","floor","hasKeyboardNavigation","handlerPrev","key","document","handler","slider","noStyles","className","count","listClassName","hasThumbs","images","map","item","index","altText","originalSrc","hasNavigation","hasNumeration","hasPagination","emptyMessage"],"mappings":"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","sourcesContent":["import {Children, Fragment, ReactNode, useCallback, useEffect, useRef, useState} from 'react'\nimport cn from 'classnames'\nimport {Image} from 'components/common/types'\nimport styles from './index.css'\n\nexport function Slider(props: {\n  children: ReactNode\n  className?: string\n  emptyMessage?: string | ReactNode\n  hasKeyboardNavigation?: boolean\n  hasNavigation?: boolean\n  hasNumeration?: boolean\n  hasPagination?: boolean\n  hasThumbs?: boolean\n  images?: Image[]\n  initialSlideNumber?: number\n  listClassName?: string\n  noStyles?: boolean\n}) {\n  const listRef = useRef(null)\n  const [isPrevButtonDisabled, setPrevButtonDisabled] = useState(false)\n  const [isNextButtonDisabled, setNextButtonDisabled] = useState(false)\n\n  const scrollToNextSlide = useCallback(() => {\n    listRef.current.scroll({\n      behavior: 'smooth',\n      left    : listRef.current.scrollLeft + listRef.current.clientWidth,\n    })\n  }, [])\n\n  const scrollToPrevSlide = useCallback(() => {\n    listRef.current.scroll({\n      behavior: 'smooth',\n      left    : listRef.current.scrollLeft - listRef.current.clientWidth,\n    })\n  }, [])\n\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(0)\n\n  const selectSlide = useCallback(e => {\n    // offset * slideIndex\n    listRef.current.scrollLeft = listRef.current.offsetWidth * Array.from(\n      e.currentTarget.parentElement.children,\n    ).indexOf(e.currentTarget)\n  }, [])\n\n  useEffect(() => {\n    if(!listRef.current || !listRef.current.scroll)\n      return\n\n    if(Number.isInteger(props.initialSlideNumber))\n      listRef.current.scroll({\n        behavior: 'auto',\n        left    : listRef.current.querySelector('.slide').offsetWidth * props.initialSlideNumber,\n      })\n  }, [props.initialSlideNumber])\n\n  useEffect(() => {\n    if(!listRef.current)\n      return\n\n    const handleResize = () => {\n      listRef.current.scrollLeft = listRef.current.scrollLeft\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [listRef])\n\n  useEffect(() => {\n    if(!listRef.current)\n      return\n\n    const element = listRef.current\n\n    const scrollHandler = () => {\n      setPrevButtonDisabled(element.scrollLeft < element.clientWidth / 2)\n      setNextButtonDisabled(element.scrollLeft > element.scrollWidth - element.clientWidth * 1.5)\n\n      setCurrentSlideIndex(\n        Math.floor((element.scrollLeft + element.offsetWidth / 2) / element.offsetWidth),\n      )\n    }\n\n    scrollHandler()\n    element.addEventListener('scroll', scrollHandler)\n    return () => element.removeEventListener('scroll', scrollHandler)\n  }, [props.children])\n\n  useEffect(() => {\n    if(props.hasKeyboardNavigation) {\n      const handlerPrev = e => {\n        if(e.key === 'ArrowLeft')\n          scrollToPrevSlide()\n      }\n\n      document.addEventListener('keyup', handlerPrev)\n      return () => document.removeEventListener('keyup', handlerPrev)\n    }\n  }, [props.hasKeyboardNavigation, scrollToPrevSlide])\n\n  useEffect(() => {\n    if(props.hasKeyboardNavigation) {\n      const handler = e => {\n        if(e.key === 'ArrowRight')\n          scrollToNextSlide()\n      }\n\n      document.addEventListener('keyup', handler)\n      return () => document.removeEventListener('keyup', handler)\n    }\n  }, [props.hasKeyboardNavigation, scrollToNextSlide])\n\n  return <div className={cn({[styles.slider]: !props.noStyles}, props.className)}>\n    {Children.count(props.children) > 0\n      ? <Fragment>\n        <div className={cn('list', props.listClassName)} ref={listRef}>\n          {props.children}\n\n          {props.hasThumbs && props.images && <div className=\"thumbs\">\n            {props.images.map((item, index) => <div\n              className={cn('item', {'is-selected': index === currentSlideIndex})}\n              key={index}\n              onClick={selectSlide}\n            >\n              <img alt={item.altText} className=\"image\" src={item.originalSrc} />\n            </div>)}\n          </div>}\n        </div>\n\n        {Children.count(props.children) > 1 && <Fragment>\n          {props.hasNavigation && <div className=\"navigation\">\n            <button\n              className={cn('button', 'type--prev', {\n                'is-disabled': isPrevButtonDisabled,\n                'is-shown'   : !isPrevButtonDisabled || !isNextButtonDisabled,\n              })}\n\n              onClick={scrollToPrevSlide}\n              type=\"button\"\n            />\n\n            <button\n              className={cn('button', 'type--next', {\n                'is-disabled': isNextButtonDisabled,\n                'is-shown'   : !isPrevButtonDisabled || !isNextButtonDisabled,\n              })}\n\n              onClick={scrollToNextSlide}\n              type=\"button\"\n            />\n          </div>}\n\n          {props.hasNumeration && <div className=\"numeration\">\n            {`${currentSlideIndex + 1} / ${Children.count(props.children)}`}\n          </div>}\n\n          {props.hasPagination && <div className=\"pagination\">\n            {Children.map(props.children, (item, index) => <button\n              className={cn('button', {'is-selected': index === currentSlideIndex})}\n              key={index}\n              onClick={selectSlide}\n              type=\"button\"\n            />)}\n          </div>}\n        </Fragment>}\n      </Fragment>\n\n      : props.emptyMessage\n        ? typeof props.emptyMessage === 'object'\n          ? props.emptyMessage\n          : <div className=\"empty-message\">{props.emptyMessage}</div>\n\n        : <div className=\"empty-message\">No results</div>\n    }\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}