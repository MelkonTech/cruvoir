{"ast":null,"code":"import { useEffect, useMemo, useState } from 'react';\nexport function useViewport(props = {\n  initial: false\n}) {\n  const {\n    0: viewportWidth,\n    1: setViewportWidth\n  } = useState();\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(props.initial);\n  useEffect(() => {\n    setIsLoaded(true);\n    setViewportWidth(window.innerWidth);\n\n    const handleResize = () => {\n      setViewportWidth(window.innerWidth);\n      if (props.onResize) props.onResize(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [props]);\n  return useMemo(() => ({\n    isLoaded,\n    width: viewportWidth\n  }), [isLoaded, viewportWidth]);\n}","map":null,"metadata":{},"sourceType":"module"}