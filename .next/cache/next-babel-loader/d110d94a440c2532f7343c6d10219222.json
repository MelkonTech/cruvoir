{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { useCallback, useMemo } from 'react';\nimport { findGenderInProductTags, normalizeCartItemForRead } from \"../../../helpers\";\nimport cn from 'classnames';\nimport { EmptyMessage } from \"../../../EmptyMessage\";\nimport { Icon } from \"../../../Icon\";\nimport { Link } from \"../../../Link\";\nimport { NativeSelect } from \"../../../form\";\nimport { PriceWithCompareAt } from \"../../../PriceWithCompareAt\";\nimport styles from \"./index.css\";\nimport { translatedProductTitle } from \"../../../helpers\";\nimport { useTranslation } from \"../../../../../i18n\";\nexport function Item(props) {\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const item = useMemo(() => normalizeCartItemForRead(props.cartItem), [props.cartItem]);\n  const removeProduct = props.removeProduct;\n  const updateProduct = props.updateProduct;\n  const remove = useCallback(() => removeProduct(item.variantID), [item.variantID, removeProduct]);\n  const update = useCallback(event => updateProduct({\n    quantity: parseInt(event.currentTarget.value, 10),\n    variantID: item.variantID\n  }), [item.variantID, updateProduct]);\n  const quantityOptions = useMemo(() => R.map(i => ({\n    label: String(i),\n    value: String(i)\n  }))(R.range(1, props.maxQuantity + 1)), [props.maxQuantity]);\n  const gender = useMemo(() => findGenderInProductTags(props.cartItem.variant.product.tags), [props.cartItem.variant.product]);\n  return __jsx(\"div\", {\n    className: cn(props.className, styles.item)\n  }, item.image ? __jsx(\"img\", {\n    className: \"image\",\n    src: item.image.transformedSrc,\n    alt: item.image.altText\n  }) : __jsx(EmptyMessage, {\n    className: \"empty-message\"\n  }, t('noImage')), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"header\", {\n    className: \"header\"\n  }, __jsx(\"div\", {\n    className: \"vendor\"\n  }, item.vendor), __jsx(\"button\", {\n    className: \"button\",\n    onClick: remove\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"cross\"\n  }))), __jsx(Link, {\n    as: `/${gender}/shop/item/${item.vendor}/${item.handle}`,\n    href: `/[gender]/shop/item/[vendor]/[handle]?gender=${gender}&vendor=${item.vendor}&handle=${item.handle}`,\n    className: \"title\"\n  }, translatedProductTitle({\n    i18n,\n    product: {\n      handle: item.handle,\n      title: item.title\n    },\n    t\n  })), R.map(o => __jsx(\"div\", {\n    key: o.name,\n    className: \"section\"\n  }, __jsx(\"div\", {\n    className: \"label\"\n  }, `${t(o.name)}:`), __jsx(\"div\", {\n    className: \"value\"\n  }, o.value)), item.options || []), __jsx(NativeSelect, {\n    className: \"input\",\n    onChange: update,\n    value: item.quantity,\n    options: quantityOptions\n  }), __jsx(PriceWithCompareAt, {\n    className: \"price\",\n    compareAtPrice: item.compareAtPrice ? Number(item.compareAtPrice) * item.quantity : null,\n    price: Number(item.price) * item.quantity\n  })));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/CartContext/CartModal/Item/index.tsx"],"names":["R","useCallback","useMemo","findGenderInProductTags","normalizeCartItemForRead","cn","EmptyMessage","Icon","Link","NativeSelect","PriceWithCompareAt","styles","translatedProductTitle","useTranslation","Item","props","t","i18n","item","cartItem","removeProduct","updateProduct","remove","variantID","update","event","quantity","parseInt","currentTarget","value","quantityOptions","map","i","label","String","range","maxQuantity","gender","variant","product","tags","className","image","transformedSrc","altText","vendor","handle","title","o","name","options","compareAtPrice","Number","price"],"mappings":";;AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AACA,SAAqBC,WAArB,EAAkCC,OAAlC,QAAgD,OAAhD;AACA,SAAQC,uBAAR,EAAiCC,wBAAjC;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,SAAQC,YAAR;AACA,SAAQC,IAAR;AACA,SAAQC,IAAR;AACA,SAAQC,YAAR;AACA,SAAQC,kBAAR;AACA,OAAOC,MAAP;AACA,SAAQC,sBAAR;AACA,SAAQC,cAAR;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAMJ;AACD,QAAM;AAACC,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,MAAYJ,cAAc,EAAhC;AACA,QAAMK,IAAI,GAAGhB,OAAO,CAAC,MAAME,wBAAwB,CAACW,KAAK,CAACI,QAAP,CAA/B,EAAiD,CAACJ,KAAK,CAACI,QAAP,CAAjD,CAApB;AACA,QAAMC,aAAa,GAAGL,KAAK,CAACK,aAA5B;AACA,QAAMC,aAAa,GAAGN,KAAK,CAACM,aAA5B;AACA,QAAMC,MAAM,GAAGrB,WAAW,CAAC,MAAMmB,aAAa,CAACF,IAAI,CAACK,SAAN,CAApB,EAAsC,CAACL,IAAI,CAACK,SAAN,EAAiBH,aAAjB,CAAtC,CAA1B;AAEA,QAAMI,MAAM,GAAGvB,WAAW,CAAEwB,KAAD,IAA2CJ,aAAa,CAAC;AAClFK,IAAAA,QAAQ,EAAGC,QAAQ,CAACF,KAAK,CAACG,aAAN,CAAoBC,KAArB,EAA4B,EAA5B,CAD+D;AAElFN,IAAAA,SAAS,EAAEL,IAAI,CAACK;AAFkE,GAAD,CAAzD,EAGtB,CAACL,IAAI,CAACK,SAAN,EAAiBF,aAAjB,CAHsB,CAA1B;AAKA,QAAMS,eAAe,GAAG5B,OAAO,CAC7B,MAAMF,CAAC,CAAC+B,GAAF,CAAMC,CAAC,KAAK;AAACC,IAAAA,KAAK,EAAEC,MAAM,CAACF,CAAD,CAAd;AAAmBH,IAAAA,KAAK,EAAEK,MAAM,CAACF,CAAD;AAAhC,GAAL,CAAP,EAAmDhC,CAAC,CAACmC,KAAF,CAAQ,CAAR,EAAWpB,KAAK,CAACqB,WAAN,GAAoB,CAA/B,CAAnD,CADuB,EAE7B,CAACrB,KAAK,CAACqB,WAAP,CAF6B,CAA/B;AAKA,QAAMC,MAAM,GAAGnC,OAAO,CAAC,MAAMC,uBAAuB,CAClDY,KAAK,CAACI,QAAN,CAAemB,OAAf,CAAuBC,OAAvB,CAA+BC,IADmB,CAA9B,EAEnB,CAACzB,KAAK,CAACI,QAAN,CAAemB,OAAf,CAAuBC,OAAxB,CAFmB,CAAtB;AAIA,SAAO;AAAK,IAAA,SAAS,EAAElC,EAAE,CAACU,KAAK,CAAC0B,SAAP,EAAkB9B,MAAM,CAACO,IAAzB;AAAlB,KACJA,IAAI,CAACwB,KAAL,GACG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAExB,IAAI,CAACwB,KAAL,CAAWC,cAAvC;AAAuD,IAAA,GAAG,EAAEzB,IAAI,CAACwB,KAAL,CAAWE;AAAvE,IADH,GAEG,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB,KAAyC5B,CAAC,CAAC,SAAD,CAA1C,CAHC,EAML;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAyBE,IAAI,CAAC2B,MAA9B,CADF,EAGE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEvB;AAApC,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,CAHF,CADF,EASE,MAAC,IAAD;AACE,IAAA,EAAE,EAAG,IAAGe,MAAO,cAAanB,IAAI,CAAC2B,MAAO,IAAG3B,IAAI,CAAC4B,MAAO,EADzD;AAEE,IAAA,IAAI,EAAG,gDAA+CT,MAAO,WAAUnB,IAAI,CAAC2B,MAAO,WAAU3B,IAAI,CAAC4B,MAAO,EAF3G;AAGE,IAAA,SAAS,EAAC;AAHZ,KAIElC,sBAAsB,CAAC;AAACK,IAAAA,IAAD;AAAOsB,IAAAA,OAAO,EAAE;AAACO,MAAAA,MAAM,EAAE5B,IAAI,CAAC4B,MAAd;AAAsBC,MAAAA,KAAK,EAAE7B,IAAI,CAAC6B;AAAlC,KAAhB;AAA0D/B,IAAAA;AAA1D,GAAD,CAJxB,CATF,EAeGhB,CAAC,CAAC+B,GAAF,CAAMiB,CAAC,IAAI;AAAK,IAAA,GAAG,EAAEA,CAAC,CAACC,IAAZ;AAAkB,IAAA,SAAS,EAAC;AAA5B,KACV;AAAK,IAAA,SAAS,EAAC;AAAf,KAAyB,GAAEjC,CAAC,CAACgC,CAAC,CAACC,IAAH,CAAS,GAArC,CADU,EAEV;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwBD,CAAC,CAACnB,KAA1B,CAFU,CAAX,EAGOX,IAAI,CAACgC,OAAL,IAAgB,EAHvB,CAfH,EAoBE,MAAC,YAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,QAAQ,EAAE1B,MAFZ;AAGE,IAAA,KAAK,EAAEN,IAAI,CAACQ,QAHd;AAIE,IAAA,OAAO,EAAEI;AAJX,IApBF,EA2BE,MAAC,kBAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,cAAc,EAAEZ,IAAI,CAACiC,cAAL,GAAsBC,MAAM,CAAClC,IAAI,CAACiC,cAAN,CAAN,GAA8BjC,IAAI,CAACQ,QAAzD,GAAoE,IAFtF;AAGE,IAAA,KAAK,EAAE0B,MAAM,CAAClC,IAAI,CAACmC,KAAN,CAAN,GAAqBnC,IAAI,CAACQ;AAHnC,IA3BF,CANK,CAAP;AAwCD","sourcesContent":["import * as R from 'ramda'\nimport {ChangeEvent, useCallback, useMemo} from 'react'\nimport {findGenderInProductTags, normalizeCartItemForRead} from 'components/common/helpers'\nimport {CartItem} from 'components/common/types'\nimport cn from 'classnames'\nimport {EmptyMessage} from 'components/common/EmptyMessage'\nimport {Icon} from 'components/common/Icon'\nimport {Link} from 'components/common/Link'\nimport {NativeSelect} from 'components/common/form'\nimport {PriceWithCompareAt} from 'components/common/PriceWithCompareAt'\nimport styles from './index.css'\nimport {translatedProductTitle} from 'components/common/helpers'\nimport {useTranslation} from 'i18n'\n\nexport function Item(props: {\n  cartItem: CartItem\n  className?: string\n  maxQuantity: number\n  removeProduct: (variantID: string) => void\n  updateProduct: (params: {quantity: number, variantID: string}) => void\n}) {\n  const {t, i18n} = useTranslation()\n  const item = useMemo(() => normalizeCartItemForRead(props.cartItem), [props.cartItem])\n  const removeProduct = props.removeProduct\n  const updateProduct = props.updateProduct\n  const remove = useCallback(() => removeProduct(item.variantID), [item.variantID, removeProduct])\n\n  const update = useCallback((event: ChangeEvent<HTMLSelectElement>) => updateProduct({\n    quantity : parseInt(event.currentTarget.value, 10),\n    variantID: item.variantID,\n  }), [item.variantID, updateProduct])\n\n  const quantityOptions = useMemo(\n    () => R.map(i => ({label: String(i), value: String(i)}))(R.range(1, props.maxQuantity + 1)),\n    [props.maxQuantity],\n  )\n\n  const gender = useMemo(() => findGenderInProductTags(\n    props.cartItem.variant.product.tags,\n  ), [props.cartItem.variant.product])\n\n  return <div className={cn(props.className, styles.item)}>\n    {item.image\n      ? <img className=\"image\" src={item.image.transformedSrc} alt={item.image.altText} />\n      : <EmptyMessage className=\"empty-message\">{t('noImage')}</EmptyMessage>\n    }\n\n    <div className=\"content\">\n      <header className=\"header\">\n        <div className=\"vendor\">{item.vendor}</div>\n\n        <button className=\"button\" onClick={remove} >\n          <Icon className=\"icon\" name=\"cross\" />\n        </button>\n      </header>\n\n      <Link\n        as={`/${gender}/shop/item/${item.vendor}/${item.handle}`}\n        href={`/[gender]/shop/item/[vendor]/[handle]?gender=${gender}&vendor=${item.vendor}&handle=${item.handle}`}\n        className=\"title\"\n      >{translatedProductTitle({i18n, product: {handle: item.handle, title: item.title}, t})}</Link>\n\n      {R.map(o => <div key={o.name} className=\"section\">\n        <div className=\"label\">{`${t(o.name)}:`}</div>\n        <div className=\"value\">{o.value}</div>\n      </div>, item.options || [])}\n\n      <NativeSelect\n        className=\"input\"\n        onChange={update}\n        value={item.quantity}\n        options={quantityOptions}\n      />\n\n      <PriceWithCompareAt\n        className=\"price\"\n        compareAtPrice={item.compareAtPrice ? Number(item.compareAtPrice) * item.quantity : null}\n        price={Number(item.price) * item.quantity}\n      />\n    </div>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}