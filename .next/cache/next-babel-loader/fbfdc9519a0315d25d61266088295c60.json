{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as R from 'ramda';\nimport { createContext, useMemo } from 'react';\nexport const FeaturedMenuContext = /*#__PURE__*/createContext({\n  men: [],\n  women: []\n});\nconst prismicResponseToFeaturedMenuItems = R.compose(R.map(menuSection => ({\n  category: menuSection[0] !== 'designers' ? 'all' : menuSection[0],\n  collection: 'all',\n  list: R.compose(R.map(menuItem => {\n    const url = R.pathOr('', ['url', 'url'], menuItem);\n    const title = R.pathOr('', ['title', 0, 'text'], menuItem);\n\n    const routeParam = name => (new RegExp(`/${name}/(.*?)/`, 'i').exec(`${url.split('?')[0]}/`) || [])[1];\n\n    return _objectSpread({\n      category: routeParam('category'),\n      collection: routeParam('collection'),\n      gender: url.replace(/https?:\\/\\//, '').split('/')[1],\n      image: R.pathOr(null, ['image', 'url'], menuItem),\n      subcategory: routeParam('subcategory'),\n      tag: url.match(/tags=/i) ? url.split('tags=')[1].split('&')[0].split(',') : null,\n      title\n    }, !url.match(/men\\/shop/gi) && {\n      url\n    });\n  }), // Prismic sometimes sends empty items\n  R.filter(R.path(['title', 0, 'text'])))(menuSection[1]),\n  subcategory: 'all',\n  title: menuSection[0]\n})), R.toPairs, R.pathOr({}, ['results', 0, 'data']));\nexport function FeaturedMenuContextProvider(props) {\n  const value = useMemo(() => ({\n    men: prismicResponseToFeaturedMenuItems(props.menPrismicResponse),\n    women: prismicResponseToFeaturedMenuItems(props.womenPrismicResponse)\n  }), [props.menPrismicResponse, props.womenPrismicResponse]);\n  return __jsx(FeaturedMenuContext.Provider, {\n    value: value\n  }, props.children);\n}","map":null,"metadata":{},"sourceType":"module"}