{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useContext, useRef } from 'react';\nimport { useClickOutside, usePopup } from \"../../../../hooks\";\nimport { AuthModalContext } from \"../../../../AuthModalContext\";\nimport cn from 'classnames';\nimport { Link } from \"../../../../Link\";\nimport { UserContext } from \"../../../../UserContext\";\nimport { useTranslation } from \"../../../../../../i18n\";\nexport function UserMenu(props) {\n  const {\n    t\n  } = useTranslation();\n  const authModalCtx = useContext(AuthModalContext);\n  const userCtx = useContext(UserContext);\n  const closeMenu = props.closeMenu;\n  const popup = usePopup();\n  const popupRef = useRef(null);\n  const intactId = 'user-menu';\n  useClickOutside({\n    callback: popup.close,\n    intactId: intactId,\n    reference: popupRef\n  });\n  const showSignIn = useCallback(() => {\n    authModalCtx.setActive('signin');\n    closeMenu();\n    popup.close();\n  }, [authModalCtx, closeMenu, popup]);\n  const signOut = useCallback(() => {\n    userCtx.signOut();\n    closeMenu();\n    popup.close();\n  }, [closeMenu, popup, userCtx]);\n  const close = useCallback(() => {\n    closeMenu();\n    popup.close();\n  }, [closeMenu, popup]);\n  return __jsx(\"div\", {\n    className: props.className\n  }, userCtx.user ? __jsx(\"div\", {\n    className: \"dropdown\"\n  }, __jsx(\"button\", {\n    className: \"button\",\n    \"data-intact-id\": intactId,\n    onClick: popup.toggle\n  }, props.welcomeMessage), __jsx(\"div\", {\n    className: cn('list', {\n      'is-shown': popup.isShown\n    }),\n    ref: popupRef\n  }, __jsx(Link, {\n    className: \"link\",\n    href: \"/profile/general\",\n    onClick: close\n  }, t('profileSetting_plural')), __jsx(Link, {\n    className: \"link\",\n    href: \"/profile/addresses\",\n    onClick: close\n  }, t('shippingAddress_plural')), __jsx(Link, {\n    className: \"link\",\n    href: \"/profile/orders\",\n    onClick: close\n  }, t('orderHistory_plural')), __jsx(\"button\", {\n    className: \"link\",\n    onClick: signOut\n  }, t('signOut')))) : __jsx(\"button\", {\n    className: \"link\",\n    onClick: showSignIn\n  }, t('signIn')));\n}","map":null,"metadata":{},"sourceType":"module"}