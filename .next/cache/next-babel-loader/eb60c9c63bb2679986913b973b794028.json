{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { Icon } from \"../../../../../common/Icon\";\nimport styles from \"./index.css\";\nimport { UnderlineWrapper } from \"../../../../../common/UnderlineWrapper\";\nimport { useTranslation } from \"../../../../../../i18n\";\nexport function CollapsableSection(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: isCollapsed,\n    1: setIsCollapsed\n  } = useState(props.isCollapsed);\n  const toggleCollapsed = useCallback(() => setIsCollapsed(!isCollapsed), [isCollapsed]);\n  return __jsx(\"div\", {\n    className: cn(styles.collapsableSection, props.className, {\n      'is-collapsed': isCollapsed\n    })\n  }, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(\"button\", {\n    className: \"title-button\",\n    onClick: toggleCollapsed,\n    type: \"button\"\n  }, props.title, __jsx(\"span\", {\n    className: cn('counter', {\n      'is-shown': props.numberOfSelected > 0\n    })\n  }, props.numberOfSelected)), __jsx(UnderlineWrapper, {\n    className: cn('clear-button', {\n      'is-shown': props.isClearButtonShown\n    })\n  }, __jsx(\"button\", {\n    className: \"button\",\n    onClick: props.clear,\n    type: \"button\"\n  }, t('clear'))), __jsx(\"div\", {\n    className: \"icons\"\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"minus\"\n  }), __jsx(Icon, {\n    className: \"icon\",\n    name: \"minus\"\n  }))), __jsx(\"div\", {\n    className: cn('list styled-scrollbar', {\n      'is-shown': !isCollapsed\n    })\n  }, props.children));\n}","map":null,"metadata":{},"sourceType":"module"}