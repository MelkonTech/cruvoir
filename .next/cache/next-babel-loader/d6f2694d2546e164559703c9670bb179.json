{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { appendURLQueryParams, getUrlAs, getUrlHref, objectToFetchPostParams } from \"../../../helpers\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport fieldStyles from \"../../../form/Input/index.css\";\nimport { getGender } from \"../../../helpers\";\nimport { Icon } from \"../../../Icon\";\nimport styles from \"./index.css\";\nimport { useClickOutside } from \"../../../hooks\";\nimport { useRouter } from 'next/router';\nimport { useTranslation } from \"../../../../../i18n\";\nexport function Search(props) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const close = props.close;\n  const router = useRouter();\n  const searchFieldRef = useRef(null); // Here and down below query check is required for tests\n\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(decodeURI(R.pathOr('', ['query', 'search'], router).toString()));\n  const urlBaseParams = useMemo(() => ({\n    category: R.pathOr(null, ['query', 'category'], router),\n    collection: R.pathOr(null, ['query', 'collection'], router),\n    gender: getGender(router, props.isBlogDomain),\n    subcategory: R.pathOr(null, ['query', 'subcategory'], router)\n  }), [router, props.isBlogDomain]);\n  const submit = useCallback(() => {\n    if (!R.isEmpty(searchFieldRef.current.value)) {\n      setSearchValue(searchFieldRef.current.value);\n      const queryParamsString = R.compose(objectToFetchPostParams, R.reject(R.anyPass([R.isEmpty, R.isNil])))({\n        search: searchFieldRef.current.value,\n        tags: R.pathOr(null, ['query', 'tags'], router),\n        vendors: R.pathOr(null, ['query', 'vendors'], router)\n      });\n      router.push(appendURLQueryParams(getUrlHref(urlBaseParams), queryParamsString), appendURLQueryParams(getUrlAs(urlBaseParams), queryParamsString)).then(() => window.scrollTo(0, 0));\n    }\n  }, [router, urlBaseParams]);\n  const submitSearchField = useCallback(e => {\n    if (e.key === 'Enter') submit();\n  }, [submit]);\n  const closeSearchField = useCallback(e => {\n    if (e.key === 'Escape') close();\n  }, [close]);\n  const clearSearchField = useCallback(() => {\n    if (!R.isNil(R.pathOr(null, ['query', 'search'], router))) {\n      const queryParamsString = R.compose(objectToFetchPostParams, R.reject(R.anyPass([R.isEmpty, R.isNil])))({\n        maxPrice: R.pathOr(null, ['query', 'maxPrice'], router),\n        minPrice: R.pathOr(null, ['query', 'minPrice'], router),\n        tags: R.pathOr(null, ['query', 'tags'], router),\n        vendors: R.pathOr(null, ['query', 'vendors'], router)\n      });\n      router.push(appendURLQueryParams(getUrlHref(urlBaseParams), queryParamsString), appendURLQueryParams(getUrlAs(urlBaseParams), queryParamsString)).then(searchFieldRef.current.focus());\n    }\n\n    setSearchValue('');\n  }, [router, urlBaseParams]);\n  const showClearSearchFieldButton = useCallback(event => {\n    setSearchValue(event.currentTarget.value);\n  }, []);\n  const popupRef = useRef(null);\n  useClickOutside({\n    callback: close,\n    intactId: props.intactId,\n    reference: popupRef\n  });\n  useEffect(() => {\n    if (props.isShown) setTimeout(() => {\n      searchFieldRef.current.focus();\n    }, 100);\n  }, [props.isShown, searchFieldRef]);\n  return __jsx(\"div\", {\n    className: cn(styles.search, props.className),\n    ref: popupRef\n  }, __jsx(\"div\", {\n    className: cn('button type--search'),\n    onClick: submit\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"search\"\n  })), __jsx(\"div\", {\n    className: cn('field', fieldStyles.input)\n  }, __jsx(\"input\", {\n    className: \"input\",\n    onChange: showClearSearchFieldButton,\n    onKeyPress: submitSearchField,\n    onKeyUp: closeSearchField,\n    ref: searchFieldRef,\n    type: \"search\",\n    value: searchValue\n  }), __jsx(\"div\", {\n    className: cn('label', {\n      'is-focused': searchValue\n    })\n  }, t('whatAreYouLookingFor'))), __jsx(\"button\", {\n    className: cn('button type--clear', {\n      'is-shown': searchValue\n    }),\n    onClick: clearSearchField\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"cross-thin\"\n  })));\n}\n\n_s(Search, \"URPB+uzJVkh1RkEFGJO4KP8fLA8=\", false, function () {\n  return [useTranslation, useRouter, useClickOutside];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/Layout/Header/Search/index.tsx"],"names":["R","appendURLQueryParams","getUrlAs","getUrlHref","objectToFetchPostParams","useCallback","useEffect","useMemo","useRef","useState","cn","fieldStyles","getGender","Icon","styles","useClickOutside","useRouter","useTranslation","Search","props","t","close","router","searchFieldRef","searchValue","setSearchValue","decodeURI","pathOr","toString","urlBaseParams","category","collection","gender","isBlogDomain","subcategory","submit","isEmpty","current","value","queryParamsString","compose","reject","anyPass","isNil","search","tags","vendors","push","then","window","scrollTo","submitSearchField","e","key","closeSearchField","clearSearchField","maxPrice","minPrice","focus","showClearSearchFieldButton","event","currentTarget","popupRef","callback","intactId","reference","isShown","setTimeout","className","input"],"mappings":"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","sourcesContent":["import * as R from 'ramda'\nimport {appendURLQueryParams, getUrlAs, getUrlHref, objectToFetchPostParams} from 'components/common/helpers'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport cn from 'classnames'\nimport fieldStyles from 'components/common/form/Input/index.css'\nimport {getGender} from 'components/common/helpers'\nimport {Icon} from 'components/common/Icon'\nimport styles from './index.css'\nimport {useClickOutside} from 'components/common/hooks'\nimport {useRouter} from 'next/router'\nimport {useTranslation} from 'i18n'\n\nexport function Search(props: {\n  className?: string\n  close: () => void\n  intactId: string\n  isShown: boolean\n  isBlogDomain?: boolean\n}) {\n  const {t} = useTranslation()\n  const close = props.close\n  const router = useRouter()\n  const searchFieldRef = useRef(null)\n\n  // Here and down below query check is required for tests\n  const [searchValue, setSearchValue] = useState(decodeURI(R.pathOr('', ['query', 'search'], router).toString()))\n\n  const urlBaseParams = useMemo(() => ({\n    category   : R.pathOr(null, ['query', 'category'], router),\n    collection : R.pathOr(null, ['query', 'collection'], router),\n    gender     : getGender(router, props.isBlogDomain),\n    subcategory: R.pathOr(null, ['query', 'subcategory'], router),\n  }), [router, props.isBlogDomain])\n\n  const submit = useCallback(\n    () => {\n      if(!R.isEmpty(searchFieldRef.current.value)) {\n        setSearchValue(searchFieldRef.current.value)\n\n        const queryParamsString = R.compose(\n          objectToFetchPostParams,\n          R.reject(R.anyPass([R.isEmpty, R.isNil])),\n        )({\n          search : searchFieldRef.current.value,\n          tags   : R.pathOr(null, ['query', 'tags'], router),\n          vendors: R.pathOr(null, ['query', 'vendors'], router),\n        })\n\n        router.push(\n          appendURLQueryParams(getUrlHref(urlBaseParams), queryParamsString),\n          appendURLQueryParams(getUrlAs(urlBaseParams), queryParamsString),\n        ).then(() => window.scrollTo(0, 0))\n      }\n    },\n\n    [router, urlBaseParams],\n  )\n\n  const submitSearchField = useCallback(\n    e => {\n      if(e.key === 'Enter')\n        submit()\n    },\n\n    [submit],\n  )\n\n  const closeSearchField = useCallback(\n    e => {\n      if(e.key === 'Escape')\n        close()\n    },\n\n    [close],\n  )\n\n  const clearSearchField = useCallback(\n    () => {\n      if(!R.isNil(R.pathOr(null, ['query', 'search'], router))) {\n        const queryParamsString = R.compose(\n          objectToFetchPostParams,\n          R.reject(R.anyPass([R.isEmpty, R.isNil])),\n        )({\n          maxPrice: R.pathOr(null, ['query', 'maxPrice'], router),\n          minPrice: R.pathOr(null, ['query', 'minPrice'], router),\n          tags    : R.pathOr(null, ['query', 'tags'], router),\n          vendors : R.pathOr(null, ['query', 'vendors'], router),\n        })\n\n        router.push(\n          appendURLQueryParams(getUrlHref(urlBaseParams), queryParamsString),\n          appendURLQueryParams(getUrlAs(urlBaseParams), queryParamsString),\n        ).then(searchFieldRef.current.focus())\n      }\n\n      setSearchValue('')\n    },\n\n    [router, urlBaseParams],\n  )\n\n  const showClearSearchFieldButton = useCallback(\n    event => {\n      setSearchValue(event.currentTarget.value)\n    },\n\n    [],\n  )\n\n  const popupRef = useRef(null)\n  useClickOutside({callback: close, intactId: props.intactId, reference: popupRef})\n\n  useEffect(() => {\n    if(props.isShown)\n      setTimeout(() => {searchFieldRef.current.focus()}, 100)\n  }, [props.isShown, searchFieldRef])\n\n  return <div className={cn(styles.search, props.className)} ref={popupRef}>\n    <div className={cn('button type--search')} onClick={submit}>\n      <Icon className=\"icon\" name=\"search\" />\n    </div>\n\n    <div className={cn('field', fieldStyles.input)}>\n      <input\n        className=\"input\"\n        onChange={showClearSearchFieldButton}\n        onKeyPress={submitSearchField}\n        onKeyUp={closeSearchField}\n        ref={searchFieldRef}\n        type=\"search\"\n        value={searchValue}\n      />\n\n      <div className={cn('label', {'is-focused': searchValue})}>{t('whatAreYouLookingFor')}</div>\n    </div>\n\n    <button\n      className={cn('button type--clear', {'is-shown': searchValue})}\n      onClick={clearSearchField}\n    >\n      <Icon className=\"icon\" name=\"cross-thin\" />\n    </button>\n\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}