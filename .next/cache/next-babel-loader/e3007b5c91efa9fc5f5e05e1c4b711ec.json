{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nimport { Button } from \"../../../../common/Button\";\nimport cn from 'classnames';\nimport { Field } from 'formik';\nimport styles from \"./index.css\";\nimport { useClickOutside } from \"../../../../common/hooks\";\nimport { useFormikContext } from 'formik';\nimport { usePopup } from \"../../../../common/hooks\";\nimport { useRef } from 'react';\nimport { useTranslation } from \"../../../../../i18n\";\nexport function SizeField(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    values\n  } = useFormikContext();\n  const popup = usePopup(false);\n  const popupRef = useRef(null);\n  const intactId = 'size-menu';\n  useClickOutside({\n    callback: popup.close,\n    intactId: intactId,\n    reference: popupRef\n  });\n  return __jsx(\"div\", {\n    className: cn(styles.sizeField, props.className)\n  }, __jsx(\"div\", {\n    className: cn('popup', {\n      'is-shown': popup.isShown\n    }),\n    ref: popupRef\n  }, R.map(value => __jsx(\"label\", {\n    className: cn('option', {\n      'is-disabled': R.includes(value, props.unavailableOptions)\n    }),\n    key: value,\n    onClick: popup.close,\n    title: value\n  }, __jsx(Field, {\n    className: \"input\",\n    name: props.option.name,\n    type: \"radio\",\n    value: value\n  }), __jsx(\"div\", {\n    className: \"value\"\n  }, R.includes(value, props.unavailableOptions) ? t('sizeSoldOut', {\n    size: value\n  }) : value)), props.option.values)), __jsx(Button, {\n    appearance: \"outline\",\n    className: \"button\",\n    intactId: intactId,\n    onClick: popup.toggle,\n    width: \"flex\"\n  }, t('sizeSize', {\n    size: values.Size\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}