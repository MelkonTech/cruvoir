{"ast":null,"code":"// If title translation exists for current language returns it, ottherwise returns default english title\nexport const translatedProductTitle = params => {\n  const translationKey = `productTitle-${params.product.handle}`;\n  return params.i18n.exists(translationKey) ? params.t(translationKey) : params.product.title;\n};","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/helpers/translated-product-title.tsx"],"names":["translatedProductTitle","params","translationKey","product","handle","i18n","exists","t","title"],"mappings":"AAEA;AACA,OAAO,MAAMA,sBAAsB,GAAIC,MAAD,IAIhC;AACJ,QAAMC,cAAc,GAAI,gBAAeD,MAAM,CAACE,OAAP,CAAeC,MAAO,EAA7D;AACA,SAAOH,MAAM,CAACI,IAAP,CAAYC,MAAZ,CAAmBJ,cAAnB,IAAqCD,MAAM,CAACM,CAAP,CAASL,cAAT,CAArC,GAAgED,MAAM,CAACE,OAAP,CAAeK,KAAtF;AACD,CAPM","sourcesContent":["import {Product} from 'components/common/types'\n\n// If title translation exists for current language returns it, ottherwise returns default english title\nexport const translatedProductTitle = (params: {\n  i18n: {exists: (string) => boolean}\n  product: Pick<Product, 'handle' | 'title'>\n  t: (string) => string\n}) => {\n  const translationKey = `productTitle-${params.product.handle}`\n  return params.i18n.exists(translationKey) ? params.t(translationKey) : params.product.title\n}\n"]},"metadata":{},"sourceType":"module"}