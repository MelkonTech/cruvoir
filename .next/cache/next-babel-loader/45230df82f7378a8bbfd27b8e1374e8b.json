{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback } from 'react';\nimport { useClickOutside, usePopup } from \"../../../../hooks\";\nimport cn from 'classnames';\nimport { Icon } from \"../../../../Icon\";\nimport { LinkWithAppDomain } from \"./LinkWithAppDomain\";\nimport { useTranslation } from \"../../../../../../i18n\";\nexport function CategoryItem(props) {\n  const {\n    t\n  } = useTranslation();\n  const popup = usePopup();\n  const close = props.close;\n  const popupClose = useCallback(() => {\n    close();\n    popup.close();\n  }, [close, popup]);\n  useClickOutside({\n    callback: close,\n    intactId: props.intactId,\n    reference: props.popupRef\n  });\n  return props.items.length ? __jsx(\"div\", {\n    className: cn('dropdown', props.className)\n  }, __jsx(\"button\", {\n    className: \"button\",\n    onClick: popup.show\n  }, props.children, __jsx(Icon, {\n    className: \"icon\",\n    name: \"next-arrow\"\n  })), __jsx(\"div\", {\n    className: cn('layer', {\n      'is-shown': popup.isShown\n    })\n  }, __jsx(\"button\", {\n    className: \"link\",\n    onClick: popup.close\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"back-arrow\"\n  }), __jsx(\"span\", {\n    className: \"title\"\n  }, props.children)), __jsx(\"hr\", {\n    className: \"divider\"\n  }), props.items.map(item => __jsx(LinkWithAppDomain\n  /* eslint-disable-next-line max-len */\n  , {\n    as: `/${item.gender}/shop/collection/${item.collection}/category/${item.category}/subcategory/${item.subcategory}${item.tag ? `?tags=${item.tag}` : ''}`,\n    className: cn('link', {\n      'has-image': item.image\n    }),\n    hasAppDomain: props.hasAppDomain\n    /* eslint-disable-next-line max-len */\n    ,\n    href: \"/[gender]/shop/collection/[collection]/category/[category]/subcategory/[subcategory]\",\n    key: `${item.title}/${item.collectionName}/${item.image || ''}`,\n    onClick: popupClose\n  }, item.image && __jsx(\"div\", {\n    className: \"picture\"\n  }, __jsx(\"img\", {\n    alt: item.collectionName ? item.collectionName : t(item.title),\n    className: \"image\",\n    src: item.image\n  })), __jsx(\"span\", {\n    className: \"title\"\n  }, item.collectionName ? item.collectionName : t(item.title)))))) : __jsx(LinkWithAppDomain, {\n    as: props.as,\n    className: \"link\",\n    hasAppDomain: props.hasAppDomain,\n    href: props.href,\n    onClick: props.close\n  }, props.children);\n}","map":null,"metadata":{},"sourceType":"module"}