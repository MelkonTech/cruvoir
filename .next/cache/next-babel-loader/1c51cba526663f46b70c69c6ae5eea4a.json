{"ast":null,"code":"import * as R from 'ramda';\nexport const addTranslationsFromPO = params => params.i18n.addResources(params.lang, 'common', R.compose(R.fromPairs, R.map(term => [term.term, term.translation.content]))(params.translations));","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/helpers/add-translations-from-po.tsx"],"names":["R","addTranslationsFromPO","params","i18n","addResources","lang","compose","fromPairs","map","term","translation","content","translations"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAIA,OAAO,MAAMC,qBAAqB,GAAIC,MAAD,IAI/BA,MAAM,CAACC,IAAP,CAAYC,YAAZ,CACJF,MAAM,CAACG,IADH,EAEJ,QAFI,EAIJL,CAAC,CAACM,OAAF,CACEN,CAAC,CAACO,SADJ,EAEEP,CAAC,CAACQ,GAAF,CAAiCC,IAAD,IAAkB,CAACA,IAAI,CAACA,IAAN,EAAYA,IAAI,CAACC,WAAL,CAAiBC,OAA7B,CAAlD,CAFF,EAGET,MAAM,CAACU,YAHT,CAJI,CAJC","sourcesContent":["import * as R from 'ramda'\nimport {Language, POTerm} from 'components/common/types'\nimport {i18n} from 'i18n'\n\nexport const addTranslationsFromPO = (params: {\n  i18n: typeof i18n\n  lang: Language\n  translations: POTerm[]\n}) => params.i18n.addResources(\n  params.lang,\n  'common',\n\n  R.compose<POTerm[], [string, string][], Record<string, string>>(\n    R.fromPairs,\n    R.map<POTerm, [string, string]>((term: POTerm) => [term.term, term.translation.content]),\n  )(params.translations),\n)\n"]},"metadata":{},"sourceType":"module"}