{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport { Icon } from \"../Icon\";\nimport ReactPlayer from 'react-player';\nimport styles from \"./index.css\";\nexport function VideoPlayer(props) {\n  const {\n    0: isVideoPlaying,\n    1: setIsVideoPlaying\n  } = useState(props.isVideoAutoplayable);\n  const {\n    0: isVideoMuted,\n    1: setIsVideoMuted\n  } = useState(props.isVideoAutoplayable);\n  const toggleVideoPlaying = useCallback(() => setIsVideoPlaying(!isVideoPlaying), [isVideoPlaying]);\n  const toggleVideoMuted = useCallback(e => {\n    e.stopPropagation();\n    setIsVideoMuted(!isVideoMuted);\n  }, [isVideoMuted]);\n  return __jsx(\"div\", {\n    className: cn(styles.videoPlayer, `state--${isVideoPlaying ? 'pause' : 'play'}`, props.className),\n    onClick: toggleVideoPlaying,\n    style: props.style\n  }, __jsx(ReactPlayer, {\n    className: \"video\",\n    height: \"100%\",\n    loop: true,\n    muted: isVideoMuted,\n    playing: isVideoPlaying,\n    url: props.videoUrl,\n    volume: isVideoMuted ? 0 : 1,\n    width: \"100%\"\n  }), __jsx(\"div\", {\n    className: cn('play-button', `state--${isVideoPlaying ? 'pause' : 'play'}`)\n  }), __jsx(\"div\", {\n    className: cn('mute-button', {\n      'is-muted': isVideoMuted\n    }),\n    onClick: toggleVideoMuted\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"speaker\"\n  })));\n}","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/VideoPlayer/index.tsx"],"names":["useCallback","useState","cn","Icon","ReactPlayer","styles","VideoPlayer","props","isVideoPlaying","setIsVideoPlaying","isVideoAutoplayable","isVideoMuted","setIsVideoMuted","toggleVideoPlaying","toggleVideoMuted","e","stopPropagation","videoPlayer","className","style","videoUrl"],"mappings":";;AAAA,SAAuBA,WAAvB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAAQC,IAAR;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAKJ;AACD,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCR,QAAQ,CAACM,KAAK,CAACG,mBAAP,CAApD;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCX,QAAQ,CAACM,KAAK,CAACG,mBAAP,CAAhD;AACA,QAAMG,kBAAkB,GAAGb,WAAW,CAAC,MAAMS,iBAAiB,CAAC,CAACD,cAAF,CAAxB,EAA2C,CAACA,cAAD,CAA3C,CAAtC;AAEA,QAAMM,gBAAgB,GAAGd,WAAW,CAACe,CAAC,IAAI;AACxCA,IAAAA,CAAC,CAACC,eAAF;AACAJ,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAHmC,EAGjC,CAACA,YAAD,CAHiC,CAApC;AAKA,SAAO;AACL,IAAA,SAAS,EAAET,EAAE,CAACG,MAAM,CAACY,WAAR,EAAsB,UAAST,cAAc,GAAG,OAAH,GAAa,MAAO,EAAjE,EAAoED,KAAK,CAACW,SAA1E,CADR;AAEL,IAAA,OAAO,EAAEL,kBAFJ;AAGL,IAAA,KAAK,EAAEN,KAAK,CAACY;AAHR,KAKL,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,KAAK,EAAER,YAJT;AAKE,IAAA,OAAO,EAAEH,cALX;AAME,IAAA,GAAG,EAAED,KAAK,CAACa,QANb;AAOE,IAAA,MAAM,EAAET,YAAY,GAAG,CAAH,GAAO,CAP7B;AAQE,IAAA,KAAK,EAAC;AARR,IALK,EAgBL;AAAK,IAAA,SAAS,EAAET,EAAE,CAAC,aAAD,EAAiB,UAASM,cAAc,GAAG,OAAH,GAAa,MAAO,EAA5D;AAAlB,IAhBK,EAkBL;AAAK,IAAA,SAAS,EAAEN,EAAE,CAAC,aAAD,EAAgB;AAAC,kBAAYS;AAAb,KAAhB,CAAlB;AAA+D,IAAA,OAAO,EAAEG;AAAxE,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,CAlBK,CAAP;AAsBD","sourcesContent":["import {CSSProperties, useCallback, useState} from 'react'\nimport cn from 'classnames'\nimport {Icon} from 'components/common/Icon'\nimport ReactPlayer from 'react-player'\nimport styles from './index.css'\n\nexport function VideoPlayer(props: {\n  className?: string\n  isVideoAutoplayable?: boolean\n  style?: CSSProperties\n  videoUrl?: string\n}) {\n  const [isVideoPlaying, setIsVideoPlaying] = useState(props.isVideoAutoplayable)\n  const [isVideoMuted, setIsVideoMuted] = useState(props.isVideoAutoplayable)\n  const toggleVideoPlaying = useCallback(() => setIsVideoPlaying(!isVideoPlaying), [isVideoPlaying])\n\n  const toggleVideoMuted = useCallback(e => {\n    e.stopPropagation()\n    setIsVideoMuted(!isVideoMuted)\n  }, [isVideoMuted])\n\n  return <div\n    className={cn(styles.videoPlayer, `state--${isVideoPlaying ? 'pause' : 'play'}`, props.className)}\n    onClick={toggleVideoPlaying}\n    style={props.style}\n  >\n    <ReactPlayer\n      className=\"video\"\n      height='100%'\n      loop\n      muted={isVideoMuted}\n      playing={isVideoPlaying}\n      url={props.videoUrl}\n      volume={isVideoMuted ? 0 : 1}\n      width='100%'\n    />\n\n    <div className={cn('play-button', `state--${isVideoPlaying ? 'pause' : 'play'}`)} />\n\n    <div className={cn('mute-button', {'is-muted': isVideoMuted})} onClick={toggleVideoMuted}>\n      <Icon className=\"icon\" name=\"speaker\" />\n    </div>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}