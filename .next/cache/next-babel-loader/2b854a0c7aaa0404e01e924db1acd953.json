{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback } from 'react';\nimport { Button } from \"../../../Button\";\nimport cn from 'classnames';\nimport { Icon } from \"../../../Icon\";\nimport { Portal } from \"../../../Portal\";\nimport { PriceWithCompareAt } from \"../../../PriceWithCompareAt\";\nimport styles from \"./index.css\";\nimport { useRouter } from 'next/router';\nimport { useTranslation } from \"../../../../../i18n\";\nexport function PopupCart(props) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n  const close = props.close;\n  const goToBag = useCallback(async () => {\n    close();\n    await router.push('/cart');\n  }, [close, router]);\n  return __jsx(Portal, {\n    selector: \"#portal-root\"\n  }, __jsx(\"div\", {\n    className: cn(styles.popupCart, props.className)\n  }, __jsx(\"header\", {\n    className: \"header\"\n  }, __jsx(\"h2\", {\n    className: \"title\"\n  }, props.title, __jsx(\"span\", {\n    className: cn('counter', {\n      'is-active': props.counterValue > 0\n    })\n  }, props.counterValue > 99 ? ':)' : props.counterValue)), __jsx(\"button\", {\n    className: \"button\",\n    onClick: close\n  }, __jsx(Icon, {\n    className: \"icon\",\n    name: \"cross\"\n  }))), props.children, __jsx(\"div\", {\n    className: \"section\"\n  }, __jsx(\"div\", {\n    className: \"label\"\n  }, t('bagSubtotal')), __jsx(PriceWithCompareAt, {\n    className: \"value\",\n    price: props.subtotal\n  }), __jsx(Button, {\n    onClick: goToBag,\n    className: \"button\",\n    width: \"flex\"\n  }, t('goToMyShoppingBag')))));\n}\n\n_s(PopupCart, \"8YYR7lTIn9wMKwTR/i1Fv85nSx4=\", false, function () {\n  return [useTranslation, useRouter];\n});\n\n_c = PopupCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupCart\");","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/CartContext/common/PopupCart/index.tsx"],"names":["useCallback","Button","cn","Icon","Portal","PriceWithCompareAt","styles","useRouter","useTranslation","PopupCart","props","t","router","close","goToBag","push","popupCart","className","title","counterValue","children","subtotal"],"mappings":";;;;AAAA,SAAmBA,WAAnB,QAAqC,OAArC;AACA,SAAQC,MAAR;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAAQC,IAAR;AACA,SAAQC,MAAR;AACA,SAAQC,kBAAR;AACA,OAAOC,MAAP;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,cAAR;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAOJ;AAAA;;AACD,QAAM;AAACC,IAAAA;AAAD,MAAMH,cAAc,EAA1B;AACA,QAAMI,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,KAAK,GAAGH,KAAK,CAACG,KAApB;AAEA,QAAMC,OAAO,GAAGd,WAAW,CAAC,YAAY;AACtCa,IAAAA,KAAK;AACL,UAAMD,MAAM,CAACG,IAAP,CAAY,OAAZ,CAAN;AACD,GAH0B,EAGxB,CAACF,KAAD,EAAQD,MAAR,CAHwB,CAA3B;AAKA,SAAO,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC;AAAjB,KACL;AAAK,IAAA,SAAS,EAAEV,EAAE,CAACI,MAAM,CAACU,SAAR,EAAmBN,KAAK,CAACO,SAAzB;AAAlB,KACE;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,KACGP,KAAK,CAACQ,KADT,EAGE;AAAM,IAAA,SAAS,EAAEhB,EAAE,CAAC,SAAD,EAAY;AAAC,mBAAaQ,KAAK,CAACS,YAAN,GAAqB;AAAnC,KAAZ;AAAnB,KACGT,KAAK,CAACS,YAAN,GAAqB,EAArB,GAA0B,IAA1B,GAAiCT,KAAK,CAACS,YAD1C,CAHF,CADF,EASE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEN;AAApC,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,CATF,CADF,EAeGH,KAAK,CAACU,QAfT,EAiBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwBT,CAAC,CAAC,aAAD,CAAzB,CADF,EAEE,MAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,OAA9B;AAAsC,IAAA,KAAK,EAAED,KAAK,CAACW;AAAnD,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEP,OAAjB;AAA0B,IAAA,SAAS,EAAC,QAApC;AAA6C,IAAA,KAAK,EAAC;AAAnD,KAA2DH,CAAC,CAAC,mBAAD,CAA5D,CAHF,CAjBF,CADK,CAAP;AAyBD;;GA1CeF,S;UAQFD,c,EACGD,S;;;KATDE,S","sourcesContent":["import {ReactNode, useCallback} from 'react'\nimport {Button} from 'components/common/Button'\nimport cn from 'classnames'\nimport {Icon} from 'components/common/Icon'\nimport {Portal} from 'components/common/Portal'\nimport {PriceWithCompareAt} from 'components/common/PriceWithCompareAt'\nimport styles from './index.css'\nimport {useRouter} from 'next/router'\nimport {useTranslation} from 'i18n'\n\nexport function PopupCart(props: {\n  children: ReactNode\n  className?: string\n  close: () => void\n  counterValue: number\n  subtotal: number\n  title: string\n}) {\n  const {t} = useTranslation()\n  const router = useRouter()\n  const close = props.close\n\n  const goToBag = useCallback(async () => {\n    close()\n    await router.push('/cart')\n  }, [close, router])\n\n  return <Portal selector=\"#portal-root\">\n    <div className={cn(styles.popupCart, props.className)}>\n      <header className=\"header\">\n        <h2 className=\"title\">\n          {props.title}\n\n          <span className={cn('counter', {'is-active': props.counterValue > 0})}>\n            {props.counterValue > 99 ? ':)' : props.counterValue}\n          </span>\n        </h2>\n\n        <button className=\"button\" onClick={close}>\n          <Icon className=\"icon\" name=\"cross\" />\n        </button>\n      </header>\n\n      {props.children}\n\n      <div className=\"section\">\n        <div className=\"label\">{t('bagSubtotal')}</div>\n        <PriceWithCompareAt className=\"value\" price={props.subtotal} />\n        <Button onClick={goToBag} className=\"button\" width=\"flex\">{t('goToMyShoppingBag')}</Button>\n      </div>\n    </div>\n  </Portal>\n}\n"]},"metadata":{},"sourceType":"module"}