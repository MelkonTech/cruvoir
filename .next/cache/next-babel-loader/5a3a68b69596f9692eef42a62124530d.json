{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useCallback } from 'react';\nimport { Field as FormikField, useField } from 'formik';\nimport { Field } from \"../common/Field\";\nimport styles from \"./index.css\";\nexport function Radio(props) {\n  const [field, meta] = useField(props.name);\n  const isInvalid = meta.error && meta.touched;\n  const change = useCallback(event => {\n    field.onChange(event);\n    if (typeof props.onChange === 'function') props.onChange(event);\n  }, [field, props]);\n  return __jsx(Field, {\n    className: props.className,\n    disabled: props.disabled,\n    errorMessage: meta.error,\n    isErrorMessageHidden: props.isErrorMessageHidden,\n    isInvalid: isInvalid\n  }, __jsx(\"label\", {\n    className: styles.radio\n  }, __jsx(FormikField, _extends({}, field, {\n    className: \"input\",\n    disabled: props.disabled,\n    onChange: change,\n    type: \"radio\",\n    name: props.name,\n    value: props.value\n  })), __jsx(\"span\", {\n    className: \"caption\"\n  }, props.caption)));\n}","map":null,"metadata":{},"sourceType":"module"}