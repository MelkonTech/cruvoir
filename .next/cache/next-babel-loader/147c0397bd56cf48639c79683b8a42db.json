{"ast":null,"code":"import * as R from 'ramda';\nimport fetch from 'node-fetch';\nimport getConfig from 'next/config';\nconst {\n  serverRuntimeConfig\n} = getConfig();\nexport default (async (req, res) => {\n  if (!req.body.checkoutId) return res.status(500).json({\n    error: 'Unique id of the checkout is missing'\n  });\n  if (!req.body.creditCard) return res.status(500).json({\n    error: 'Credit card info is required'\n  });\n  if (R.any(key => R.anyPass([R.isEmpty, R.isNil])(req.body.creditCard[key]), ['number', 'first_name', 'last_name', 'month', 'year', 'verification_value'])) return res.status(500).json({\n    error: 'Credit card info is incomplete'\n  });\n\n  try {\n    let paymentSessionId;\n    let recentFetchResponse;\n\n    try {\n      // Submit payment intent and grab the session id\n      recentFetchResponse = await fetch(serverRuntimeConfig.NEXT_SERVER_CREATE_SHOPIFY_STRIPE_INTENT_API_URL, {\n        body: JSON.stringify({\n          credit_card: req.body.creditCard\n        }),\n        headers: {\n          accept: 'application/json',\n          'content-type': 'application/json',\n          'x-shopify-access-token': serverRuntimeConfig.NEXT_SERVER_SHOPIFY_ADMIN_API_TOKEN\n        },\n        method: 'POST'\n      });\n      paymentSessionId = (await recentFetchResponse.json()).id;\n    } catch (error) {\n      console.error(error);\n      return res.status(recentFetchResponse.status).json({\n        error: `Error while creating the payment's session: ${recentFetchResponse.statusText}`\n      });\n    }\n\n    res.status(200).json({\n      paymentSessionId\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      error\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}