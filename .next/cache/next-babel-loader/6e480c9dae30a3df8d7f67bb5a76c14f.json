{"ast":null,"code":"import * as R from 'ramda';\nexport const shopifyEdgesToProducts = params => R.compose(R.pluck('node'), R.pathOr([], R.filter(Boolean, [params.queryName, 'products', 'edges'])))(params.data);","map":{"version":3,"sources":["D:/Work/web/direlli/frontend/components/common/helpers/shopify-edges-to-products.tsx"],"names":["R","shopifyEdgesToProducts","params","compose","pluck","pathOr","filter","Boolean","queryName","data"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,OAAnB;AAGA,OAAO,MAAMC,sBAAsB,GAAGC,MAAM,IAAIF,CAAC,CAACG,OAAF,CAK9CH,CAAC,CAACI,KAAF,CAAQ,MAAR,CAL8C,EAM9CJ,CAAC,CAACK,MAAF,CAAS,EAAT,EAAaL,CAAC,CAACM,MAAF,CAASC,OAAT,EAAkB,CAACL,MAAM,CAACM,SAAR,EAAmB,UAAnB,EAA+B,OAA/B,CAAlB,CAAb,CAN8C,EAO9CN,MAAM,CAACO,IAPuC,CAAzC","sourcesContent":["import * as R from 'ramda'\nimport {Product} from 'components/common/types'\n\nexport const shopifyEdgesToProducts = params => R.compose<{\n  collectionByHandle: {products: {edges: {node: Product}[]}}},\n  {node: Product}[],\n  Product[]\n>(\n  R.pluck('node'),\n  R.pathOr([], R.filter(Boolean, [params.queryName, 'products', 'edges'])),\n)(params.data)\n"]},"metadata":{},"sourceType":"module"}